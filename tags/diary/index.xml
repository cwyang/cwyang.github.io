<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>diary on A Tale That Wasn&#39;t Left</title>
    <link>https://cwyang.github.io/tags/diary/</link>
    <description>Recent content in diary on A Tale That Wasn&#39;t Left</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Oct 2024 13:28:09 +0900</lastBuildDate>
    <atom:link href="https://cwyang.github.io/tags/diary/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Missing libSegFault.so</title>
      <link>https://cwyang.github.io/24-10-01-missing-libsegfault/</link>
      <pubDate>Tue, 01 Oct 2024 13:28:09 +0900</pubDate>
      <guid>https://cwyang.github.io/24-10-01-missing-libsegfault/</guid>
      <description>https://sourceware.org/pipermail/glibc-cvs/2022q1/076117.html&#xA;SEGFAULT_SIGNALS=&amp;quot;all&amp;quot; LD_PRELOAD=/usr/lib/libSetFault.so prog&#xA;위와 같이 프로그램을 실행시키고 해당 프로세스 장애시 로그에 백트레이스를 기록하는 용도로 많이 사용했었던 glibc의 libSegFault가 단종(deprecate)되었다.</description>
    </item>
    <item>
      <title>크래시 덤프 수집</title>
      <link>https://cwyang.github.io/2022/03/04/collecting-crash-dump.html/</link>
      <pubDate>Fri, 04 Mar 2022 16:14:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2022/03/04/collecting-crash-dump.html/</guid>
      <description>만든 프로그램이 장애가 발생하면 한시라도 빨리 그 내용이 개발자에게 전달이 되어야겠으나,</description>
    </item>
    <item>
      <title>git submodule</title>
      <link>https://cwyang.github.io/2022/03/04/git-submodule.html/</link>
      <pubDate>Fri, 04 Mar 2022 15:54:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2022/03/04/git-submodule.html/</guid>
      <description>parent project에서 child project를 git submodule로 사용할 때,&#xA;child의 hash를 바꾼 parent를 체크아웃해도 로컬 child는 변하지 않는다.</description>
    </item>
    <item>
      <title>Linux 시스템 비프 활성화</title>
      <link>https://cwyang.github.io/2013/03/26/activating-linux-system-beep.html/</link>
      <pubDate>Tue, 26 Mar 2013 11:01:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2013/03/26/activating-linux-system-beep.html/</guid>
      <description>Arch Linux설치후 오년여 만족하며 사용하고 있었으나, 최근들어 x-server가 자주 비정상 종료하는 경우가 발생했다.</description>
    </item>
    <item>
      <title>여러가지 해묵은 문제 해결: Erlang, Firefox, Xmonad, Xmobar, Haskell</title>
      <link>https://cwyang.github.io/2011/08/19/various-dev-environ-setup.html/</link>
      <pubDate>Fri, 19 Aug 2011 16:22:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2011/08/19/various-dev-environ-setup.html/</guid>
      <description>어제오늘 오늘 그동안 게으름때문에 미뤄두고 살았던 여러가지 묵은 숙제들을 해결했다.</description>
    </item>
    <item>
      <title>SSL_read()와 read()는 같은가요?</title>
      <link>https://cwyang.github.io/2009/10/21/SSL-read-vs-read.html/</link>
      <pubDate>Wed, 21 Oct 2009 14:48:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2009/10/21/SSL-read-vs-read.html/</guid>
      <description>네트워크 프로그래밍시에 SSL 연결과의 자료전송도 필요하게 되면 SSL_read()와 SSL_write()를 써야하기 마련이다. 많은 경우 SSL연결 뿐만이 아닌 일반 전송도 필요하므로, 프로그래머는 대개 아래와 같이 연결 종류에 무관한 wrapping API를 만들어서 진행하는데, 이 경우 SSL_read()와 read()의 차이점을 알아야한다.</description>
    </item>
    <item>
      <title>RWH 3번째 읽다</title>
      <link>https://cwyang.github.io/2009/04/01/RWH-read-three-times.html/</link>
      <pubDate>Wed, 01 Apr 2009 10:32:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2009/04/01/RWH-read-three-times.html/</guid>
      <description>1월부터 읽던 RWH를 이제서야 다 읽었다. 첫번째, 두번째 읽을 때와 마찬가지로 정독으로 시작하여 skimming으로 끝나고 말았다. 그래도 읽을때마다 점점 나아지는 것은 정독으로 이해하는 부분이 점점 많아진다는 점이다.</description>
    </item>
    <item>
      <title>Haskell의 폴드(Fold)란 무엇인가요</title>
      <link>https://cwyang.github.io/2009/02/17/what-is-fold-in-haskell.html/</link>
      <pubDate>Tue, 17 Feb 2009 09:39:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2009/02/17/what-is-fold-in-haskell.html/</guid>
      <description>폴드는 reduce라고도 불리우는 연산자로써 리스트의 각 요소에 대해 연산을 수행하여 하나의 결과값을 반환한다. Map &amp;amp; reduce 처럼 map과 같이 흔히 일컬어 지는, 함수형 프로그래밍 방식의 좌청룡 우백호 중의 하나인데, 사실 map 역시도 폴드로 정의가 가능하므로 폴드가 좀 더 파워풀 한 연산자이다.</description>
    </item>
    <item>
      <title>More Monad Tutorials</title>
      <link>https://cwyang.github.io/2009/02/02/more-tutorials-on-haskell.html/</link>
      <pubDate>Mon, 02 Feb 2009 20:53:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2009/02/02/more-tutorials-on-haskell.html/</guid>
      <description>Understanding Monad, for real과 You could have invented Monads! (And maybe you already have.), 두 튜토리얼을 더 읽었다.</description>
    </item>
    <item>
      <title>Yet Another Haskell Tutorial</title>
      <link>https://cwyang.github.io/2009/02/01/yet-another-haskell-tutorial.html/</link>
      <pubDate>Sun, 01 Feb 2009 02:17:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2009/02/01/yet-another-haskell-tutorial.html/</guid>
      <description>Hal Daum ́e III의 Yet Another Haskell Tutoriall을 읽고 있다.</description>
    </item>
    <item>
      <title>1월 Wrap-up: Programming in Haskell</title>
      <link>https://cwyang.github.io/2009/01/23/programming-in-haskell.html/</link>
      <pubDate>Fri, 23 Jan 2009 10:20:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2009/01/23/programming-in-haskell.html/</guid>
      <description>개발에 있어서는 Silver Bullet이 있다고 생각하는 고로, 여러 programming language를 탐험하는 편인데, 올해의 Language는 Haskell. (C -&amp;gt; C++ -&amp;gt; Java -&amp;gt; Ruby -&amp;gt; Erlang -&amp;gt; Lisp -&amp;gt; Haskell)</description>
    </item>
  </channel>
</rss>
