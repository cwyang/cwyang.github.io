<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on A Tale That Wasn&#39;t Left</title>
    <link>https://cwyang.github.io/</link>
    <description>Recent content in Home on A Tale That Wasn&#39;t Left</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Apr 2025 02:22:00 +0900</lastBuildDate>
    <atom:link href="https://cwyang.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MCP(Model Context Protocol)에 부쳐</title>
      <link>https://cwyang.github.io/25-04-06-mcp/</link>
      <pubDate>Sun, 06 Apr 2025 02:22:00 +0900</pubDate>
      <guid>https://cwyang.github.io/25-04-06-mcp/</guid>
      <description>&lt;p&gt;청소를 하며 창문을 열어두었더니 시원한 바람이 들어왔다. 엊그제가 겨울이었지만 금세 봄이 오고, 이제 곧 여름이 다가올 것 같다. 매일같이 쏟아지는 기술 기사 속에서 세상의 변화 속도는 어지러울 지경이다. 다가올 미래는 어제까지 알고 있던 풍경과는 전혀 다를지도 모른다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Missing libSegFault.so</title>
      <link>https://cwyang.github.io/24-10-01-missing-libsegfault/</link>
      <pubDate>Tue, 01 Oct 2024 13:28:09 +0900</pubDate>
      <guid>https://cwyang.github.io/24-10-01-missing-libsegfault/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://cwyang.github.io/assets/images/i_segv.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://sourceware.org/pipermail/glibc-cvs/2022q1/076117.html&#34;&gt;https://sourceware.org/pipermail/glibc-cvs/2022q1/076117.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;SEGFAULT_SIGNALS=&amp;quot;all&amp;quot; LD_PRELOAD=/usr/lib/libSetFault.so prog&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Welcome to Hugo</title>
      <link>https://cwyang.github.io/welcome-to-hugo/</link>
      <pubDate>Thu, 05 Sep 2024 02:39:00 +0000</pubDate>
      <guid>https://cwyang.github.io/welcome-to-hugo/</guid>
      <description>&lt;p&gt;&lt;code&gt;If it ain&#39;t broke, don&#39;t fix it&lt;/code&gt;은 불변의 진리이나 어느날 괜히 삽을 뜨고 싶을 때가 있다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MTU와 MSS</title>
      <link>https://cwyang.github.io/2024/01/31/mtu-and-mss.html/</link>
      <pubDate>Wed, 31 Jan 2024 19:06:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2024/01/31/mtu-and-mss.html/</guid>
      <description>&lt;p&gt;라우터, 방화벽을 다루다보면 MTU와 MSS 두 단어를 흔히 접하게 된다.&#xA;비슷한 의미를 가지고 있기에 헷갈리고 있어 이 기회에 정리한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>HTTP/2 Rapid Reset DoS공격</title>
      <link>https://cwyang.github.io/2024/01/12/http2-rapid-reset.html/</link>
      <pubDate>Fri, 12 Jan 2024 19:00:03 +0000</pubDate>
      <guid>https://cwyang.github.io/2024/01/12/http2-rapid-reset.html/</guid>
      <description>HTTP/2 프로토콜을 이용한 서비스거부공격(DoS)에 대한 대처가 필요하다.</description>
    </item>
    <item>
      <title>UDP 에코 서버</title>
      <link>https://cwyang.github.io/2023/07/16/UDP-echo-server.html/</link>
      <pubDate>Sun, 16 Jul 2023 19:02:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2023/07/16/UDP-echo-server.html/</guid>
      <description>UDP는 connectionless이기에 TCP와 달리 데이터 주고받을 때에 고려해야 할 다음과 같은 경우들이 있다. 보낸 요청에 대해서 다른 IP로부터 응답이 돌아오는 경우, 서버가 IP주소를 여러개 가지고 있을 때, 받은 요청에 대해 응답을 할 IP를 결정하는 경우</description>
    </item>
    <item>
      <title>Linux Settings in 2023</title>
      <link>https://cwyang.github.io/2023/03/26/linux-settings.html/</link>
      <pubDate>Sun, 26 Mar 2023 09:24:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2023/03/26/linux-settings.html/</guid>
      <description>&lt;p&gt;잠시 사용하던 윈도우에서 다시 리눅스로 돌아가고자 한다.&#xA;랩탑에 설치하는 것은 처음이다. 윈도우와 최대한 유사하게 꾸며보기로 한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Receive Side Scaling</title>
      <link>https://cwyang.github.io/2023/02/22/Receive-Side-Scaling.html/</link>
      <pubDate>Wed, 22 Feb 2023 20:00:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2023/02/22/Receive-Side-Scaling.html/</guid>
      <description>&lt;p&gt;RSS에 대해서 다시 자료를 보고 있는데&#xA;&lt;a href=&#34;https://cwyang.github.io/2010/06/10/multiqueue-nic.html/&#34;&gt;10년전에도 Multiqueue NIC에 대해서 썼었다는 것을 발견했다.&lt;/a&gt;&#xA;아 세월의 무상함이여..&lt;/p&gt;</description>
    </item>
    <item>
      <title>Azure VNET 라우팅</title>
      <link>https://cwyang.github.io/2023/02/08/Azure-VNET-routing.html/</link>
      <pubDate>Wed, 08 Feb 2023 20:00:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2023/02/08/Azure-VNET-routing.html/</guid>
      <description>&lt;p&gt;Azure의 VNET(Virtual Network)은 클라우드상의 네트워크 환경이다.&#xA;AWS의 VPC (Virtual Private Cloud)에 대응한다.&#xA;VNET에 할당된 주소범위(CIDR)를 구분하여 서브넷을 만들고, 서브넷간의 라우팅이 가능하다.&#xA;VNET은 독립된 네트워크인데 주소범위가 겹치지 않는다면 여러 VNET을 연결(peering)하여 구성이 가능하다.&#xA;이러면 VPC사이에서도 라우팅이 가능하다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ChatGPT-3가 설명하는 ChatGPT-3</title>
      <link>https://cwyang.github.io/2023/02/07/what-is-chatgpt3.html/</link>
      <pubDate>Tue, 07 Feb 2023 20:00:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2023/02/07/what-is-chatgpt3.html/</guid>
      <description>안녕하세요! 오늘은 OpenAI에서 개발한 최신 언어 모델, ChatGPT-3에 대해 이야기해볼께요. GPT (Generative Pretrained Transformer) 구조의 세 번째 버전인 ChatGPT-3은 NLP (Natural Language Processing) 세계를 휩쓸었습니다. 이 고급 언어 모델은 다양한 인터넷 텍스트로 교육되었기 때문에, 놀랍도록 정확하게 인간처럼 텍스트를 생성합니다.</description>
    </item>
    <item>
      <title>HAProxy, 그리고 OpenSSL3 성능</title>
      <link>https://cwyang.github.io/2023/02/03/slow-openssl-3.0.html/</link>
      <pubDate>Fri, 03 Feb 2023 20:00:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2023/02/03/slow-openssl-3.0.html/</guid>
      <description>OpenSSL 3.0의 큰 설계방향은 개발의 편의성을 위해서 모듈화/추상화를 만들어 넣은 건데, 반대급부로 성능이 많이 떨어졌습니다. 모듈이 복잡해지면 공유자원 사용을 위한 락이 많이 사용되는 경향이 있기 때문에, 스레드(코어)가 많아질수록 CPU 락 경합때문에 발생하는 성능 저하 현상이 문제가 됩니다.</description>
    </item>
    <item>
      <title>패스워드 매니저의 위험성과 클라우드 보안</title>
      <link>https://cwyang.github.io/2023/02/02/security-of-the-password-mangagers.html/</link>
      <pubDate>Thu, 02 Feb 2023 21:30:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2023/02/02/security-of-the-password-mangagers.html/</guid>
      <description>일반적인 사용자들의 패스워드는 40 비트 정도의 엔트로피를 가진다고 합니다. 40 비트 키는 매우 취약하다는 이야기 많이 들어보셨을거에요. 랜덤하게 만들어도 72 비트 이상가기가 어렵다고 하는데요. 그래서 PBKDF2를 반복(iteration)해서 적용하여 안전한 키를 만듭니다.</description>
    </item>
    <item>
      <title>API endpoint들의 취약한 TLS 버젼</title>
      <link>https://cwyang.github.io/2022/07/06/weak_tls_on_api_endpoint.html/</link>
      <pubDate>Wed, 06 Jul 2022 08:58:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2022/07/06/weak_tls_on_api_endpoint.html/</guid>
      <description>TLS 1.2 미만 (SSL*, TLS1.0, TLS1.1)은 그 보안취약점으로 인해 IETF가 2021년 3월에 정식으로 관뚜껑에 못질을 하였습니다.</description>
    </item>
    <item>
      <title>비대면 시대의 보안기술 - 보안 서비스 엣지</title>
      <link>https://cwyang.github.io/2022/06/23/secure-service-edge.html/</link>
      <pubDate>Thu, 23 Jun 2022 19:58:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2022/06/23/secure-service-edge.html/</guid>
      <description>오늘은 비대면 시대의 보안기술로 제로트러스트와 함께 이야기 되고 있는 보안 서비스 엣지에 대해서 간단히 소개를 드려볼까 합니다. 사용자와 모든 정보자산이 사내망에 있고, 방화벽으로 내부와 외부를 격리하는 전통적인 보안 모델이 클라우드 시대에는 맞지 않게 되었어요. 보안을 하려면 검사및 조치를 하는 중앙지점이 필요한데, 사람은 안에도 있고 밖에도 있고요, 업무 자산도 사내망에도 있고 클라우드에도 있고 파편화되기 시작한거에요. 보안 입장에서 보면 혼돈의 카오스죠.</description>
    </item>
    <item>
      <title>eBPF와 libbpf</title>
      <link>https://cwyang.github.io/2022/03/11/libxdp.html/</link>
      <pubDate>Fri, 11 Mar 2022 09:36:43 +0000</pubDate>
      <guid>https://cwyang.github.io/2022/03/11/libxdp.html/</guid>
      <description>eBPF를 꼭 커널 프로그래머들만 사용해야하는가? 꼭 그렇지많은 않다. 커널의 주요 실행 포인트들에서 eBPF를 위한 후킹 포인트를 제공하고 있기 때문에 종래의 top, iostat, vmstat, perf등보다 상세한 시스템 모니터링을 위해 사용할 수 있다. 넷플릭스 SRE팀의 브렌단 그렉이 eBPF를 이용한 여러가지 도구를 만들어 발표한 이후 SRE, 데브옵스 직무로부터 많은 관심을 받고 있다.</description>
    </item>
    <item>
      <title>크래시 덤프 수집</title>
      <link>https://cwyang.github.io/2022/03/04/collecting-crash-dump.html/</link>
      <pubDate>Fri, 04 Mar 2022 16:14:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2022/03/04/collecting-crash-dump.html/</guid>
      <description>&lt;p&gt;만든 프로그램이 장애가 발생하면 한시라도 빨리 그 내용이 개발자에게 전달이 되어야겠으나,&lt;br&gt;&#xA;일터에서 만든 프로그램의 환경은 주로 폐쇄망이어서 결국 전화나 메시지로 전달을 받고 있다.&lt;br&gt;&#xA;프로그램의 버젼과 관련정보, 스택트레이스등을 자동적으로 받을 수 있는 그 날이 언제인가..&lt;/p&gt;</description>
    </item>
    <item>
      <title>git submodule</title>
      <link>https://cwyang.github.io/2022/03/04/git-submodule.html/</link>
      <pubDate>Fri, 04 Mar 2022 15:54:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2022/03/04/git-submodule.html/</guid>
      <description>&lt;p&gt;&lt;code&gt;parent&lt;/code&gt; project에서 &lt;code&gt;child&lt;/code&gt; project를 git submodule로 사용할 때,&lt;br&gt;&#xA;&lt;code&gt;child&lt;/code&gt;의 hash를 바꾼 &lt;code&gt;parent&lt;/code&gt;를 체크아웃해도 로컬 &lt;code&gt;child&lt;/code&gt;는 변하지 않는다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>창업가의 답</title>
      <link>https://cwyang.github.io/2022/02/15/some-enterpreneurs.html/</link>
      <pubDate>Tue, 15 Feb 2022 01:53:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2022/02/15/some-enterpreneurs.html/</guid>
      <description>스타트업은 망할때까지 망할 것 같다.. 스타트업은 동료가 중요하다. 너 내 동료가 돼라.</description>
    </item>
    <item>
      <title>블럭체인 지갑과 NFT</title>
      <link>https://cwyang.github.io/2022/01/05/nft_metamask.html/</link>
      <pubDate>Wed, 05 Jan 2022 15:13:17 +0000</pubDate>
      <guid>https://cwyang.github.io/2022/01/05/nft_metamask.html/</guid>
      <description>메타마스크는 브라우저캐시에 사용자의 비밀키를 패스워드로 암호화 하여 저장한다. 사용자가 메타마스크를 사용함에 있어서 관리해야하는 정보는 두 가지이다 (1) 패스워드 - 브라우저 로그인 시에 사용 (2) 비밀 구문 - 새로운 접근 환경 또는 패스워드 분실시 사용. 패스워드는 저장된 비밀키를 복호화 하기 위하여 필요하다. 비밀 구문은 날것의 비밀키를 사람이 저장하기 쉬운 형태로 코드화 한 것이다.</description>
    </item>
    <item>
      <title>디파이의 위험</title>
      <link>https://cwyang.github.io/2022/01/03/tinyman-gets-attack.html/</link>
      <pubDate>Mon, 03 Jan 2022 15:45:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2022/01/03/tinyman-gets-attack.html/</guid>
      <description>2022년을 맞이하여 새로운 분야인 NFT/디파이/블럭체인을 공부해볼까 마음을 먹고 신년 첫날 알고랜드 디파이 LP풀에 $30를 예치해보았는데&amp;hellip;</description>
    </item>
    <item>
      <title>이번 Log4J 자바취약점 요약</title>
      <link>https://cwyang.github.io/2021/12/14/cve-2021-44228.html/</link>
      <pubDate>Tue, 14 Dec 2021 12:08:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2021/12/14/cve-2021-44228.html/</guid>
      <description>이번 자바취약점 CVE-2021-44228에 대해 짧게 씁니다.</description>
    </item>
    <item>
      <title>Python 환경설정</title>
      <link>https://cwyang.github.io/2021/11/04/python-dev-environment-setup.html/</link>
      <pubDate>Thu, 04 Nov 2021 16:59:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2021/11/04/python-dev-environment-setup.html/</guid>
      <description>&lt;ol&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.conda.io/en/latest/miniconda.html&#34;&gt;conda를 설치한다&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;conda venv 셋업&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ conda create -n venv_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ conda activate venv_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>인간이 중요해진 시대 - CES 2021</title>
      <link>https://cwyang.github.io/2021/02/04/ces-2021.html/</link>
      <pubDate>Thu, 04 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2021/02/04/ces-2021.html/</guid>
      <description>2021년. 무엇보다 인간의 생활이 중요해진 시대.</description>
    </item>
    <item>
      <title>도커허브 이미지 풀 제약을 하버로 해결하기</title>
      <link>https://cwyang.github.io/2021/01/20/using-harbor-to-avoid-dockerhub-pull-ratelimit.html/</link>
      <pubDate>Wed, 20 Jan 2021 15:02:41 +0000</pubDate>
      <guid>https://cwyang.github.io/2021/01/20/using-harbor-to-avoid-dockerhub-pull-ratelimit.html/</guid>
      <description>도커허브에서 무료사용자들에 대해 pul rate limit를 부과하기 시작했다. ip별 6시간에 100번, 무료사용자 id하나에 대해 6시간에 200번. 연구소 기계들이 NAT아래에 있다보니 이미지 몇개 당겨오다보면 금방 한계에 부딪히게 되고 만다. 쿠버네티스 파드가 뜨지 않는다.</description>
    </item>
    <item>
      <title>맥OS 앱 코드사인 및 공증하기</title>
      <link>https://cwyang.github.io/2020/12/09/osx-codesign-notarization.html/</link>
      <pubDate>Wed, 09 Dec 2020 18:12:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2020/12/09/osx-codesign-notarization.html/</guid>
      <description>&lt;p&gt;윈도우즈와 마찬가지로 맥 생태계에서도 인터넷으로 다운 받는 앱에 대해서는 보안검증이 이루어진다.&#xA;앱을 누가 만들었는지를 알 수 없거나 악성 코드 체크가 이루어지지 않는 경우 아래 그림과 같이&#xA;사용자에게 물어보거나, 설정에 따라서 실행을 아예 막아버리기도 한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>클라우드 퍼스트 단상</title>
      <link>https://cwyang.github.io/2020/12/05/what-does-cloud-computing-bring-to-us.html/</link>
      <pubDate>Sat, 05 Dec 2020 20:17:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2020/12/05/what-does-cloud-computing-bring-to-us.html/</guid>
      <description>미국은 이미 10년전에 클라우드 퍼스트 전략을 발표했다. 우리 정부도 클라우드 퍼스트. 많은 기업들도 디지털 트랜스포메이션이라는 기치 아래 클라우드로 가고 있다&amp;hellip; 세상에 공짜가 어디있겠나. 누군가는 손해를 봐야한다.</description>
    </item>
    <item>
      <title>한 세션을 여러번 정책 라우팅하니까 NAT가 안돼요</title>
      <link>https://cwyang.github.io/2020/04/18/why-iptables-nat-not-working-with-multiple-policy-routing.html/</link>
      <pubDate>Sat, 18 Apr 2020 09:15:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2020/04/18/why-iptables-nat-not-working-with-multiple-policy-routing.html/</guid>
      <description>정책 라우팅으로 같은 5-tuple 패킷을 iptables에 여러번 보내는 것입니다. &lt;code&gt;iptales -L -nv&lt;/code&gt;로 패킷 카운트를 보면 MASQUERADE룰 말고는 다 매치가 되는데 MASQUERADE만 매치가 안되는 이유는 무엇인가요?</description>
    </item>
    <item>
      <title>OpenSSL 3.0</title>
      <link>https://cwyang.github.io/2019/12/19/openssl-3.0.html/</link>
      <pubDate>Thu, 19 Dec 2019 11:33:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2019/12/19/openssl-3.0.html/</guid>
      <description>벌써 연말이다. 2020년에는 OpenSSL 3.0이 발표 예정이다. OpenSSL 1.1.1 작업을 한 지도 얼마 안되었는데&amp;hellip;</description>
    </item>
    <item>
      <title>춘추의 설계자 관중</title>
      <link>https://cwyang.github.io/2019/06/12/guan_zhong.html/</link>
      <pubDate>Wed, 12 Jun 2019 14:30:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2019/06/12/guan_zhong.html/</guid>
      <description>노동 생산성 향상을 위하여 제시한 관중의 분업은 서구의 컨베이어 벨트형 분업이 아니고, 하나의 공정을 지배하는 분업이라는 점이 인상깊다.</description>
    </item>
    <item>
      <title>OVS, Docker, CentOS7 환경 만들기</title>
      <link>https://cwyang.github.io/2018/10/12/ovs-docker-centos7-environment.html/</link>
      <pubDate>Fri, 12 Oct 2018 14:38:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2018/10/12/ovs-docker-centos7-environment.html/</guid>
      <description>centos7기반의 ovs와 docker가 머신이 당분간 계속 필요할 것 같아서,  vagrant를 이용하여 VM을  빌드해보기로 하였습니다.</description>
    </item>
    <item>
      <title>Encrypted SNI</title>
      <link>https://cwyang.github.io/2018/09/24/cloudflare-does-esni.html/</link>
      <pubDate>Mon, 24 Sep 2018 09:40:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2018/09/24/cloudflare-does-esni.html/</guid>
      <description>얼마전에 H2O개발자인 Kazuho Oku씨가 IETF hackerthon에서 암호화 SNI 구현을 했다는 소식을 들었습니다. 그리고 오늘 Cloudflare에서 모든 서비스에 full support를 한다고 발표를 했네요.</description>
    </item>
    <item>
      <title>디퍼런트 - Escaping the Competitive Herd</title>
      <link>https://cwyang.github.io/2018/07/02/different-escaping-the-competitive-herd.html/</link>
      <pubDate>Mon, 02 Jul 2018 12:00:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2018/07/02/different-escaping-the-competitive-herd.html/</guid>
      <description>지난 주말에 책 한권을 읽었습니다. 경영 서적인 &amp;lt;디퍼런트&amp;gt; 입니다. 성숙된 시장에서는 소비자는 회사가 아닌 카테고리만을 기억한다는 점이 인상적이었기에 짧게 책을 소개해드릴께요.</description>
    </item>
    <item>
      <title>문체부의 불법 유통 해외사이트 집중 단속에 붙여</title>
      <link>https://cwyang.github.io/2018/06/01/internet-filtering.html/</link>
      <pubDate>Fri, 01 Jun 2018 15:10:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2018/06/01/internet-filtering.html/</guid>
      <description>문체부가 2018년 5월 2일 웹툰 등 불법 유통 해외사이트 집중 단속 및 정품 이용 캠페인 연계 실시에 대하여 보도자료를 발표하였습니다. 이번 글에서는 기술적 측면에서 불법 사이트 차단 문제를 살펴보도록 하겠습니다.</description>
    </item>
    <item>
      <title>*.co.kr 인증서가 발급되었습니다.</title>
      <link>https://cwyang.github.io/2018/04/05/omg-wildcard-cert-co-kr.html/</link>
      <pubDate>Thu, 05 Apr 2018 09:00:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2018/04/05/omg-wildcard-cert-co-kr.html/</guid>
      <description>식목일입니다. 출근하니 인터넷이 전자정부 와일드카드 인증서때문에 시끌시끌하네요. 인증서는 전 세계를 대상으로하는 주민등록증이라고 할 수 있는데 정부에서 운영을 잘 해주었어야 한다고 생각합니다. 오늘의 사건에 대해서 쉽게 풀어보겠습니다.</description>
    </item>
    <item>
      <title>HTTPS를 쓴다고 안심할 수 만은 없다는데, 왜?</title>
      <link>https://cwyang.github.io/2018/03/28/is-https-really-safe.html/</link>
      <pubDate>Wed, 28 Mar 2018 17:15:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2018/03/28/is-https-really-safe.html/</guid>
      <description>주소창에 녹색 자물쇠가 보이면 안전하다구?</description>
    </item>
    <item>
      <title>HTTPS 사용이 100%가 된다면?</title>
      <link>https://cwyang.github.io/2018/03/24/if_https_usage_becomes_100_percent.html/</link>
      <pubDate>Sat, 24 Mar 2018 10:15:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2018/03/24/if_https_usage_becomes_100_percent.html/</guid>
      <description>HTTP 사이트가 HTTPS 사이트로 전환되고 있는 추세에 대해서는 잘 아시고 계시지요? 웹 트래픽 중 양적으로나 수적으로 60%정도 사용되고 있고, 계속 증가 추세입니다. 그 추세는 점유율이 어느정도가 되면 완만하게 꺾일 것이라고 저도, 그리고 여러분도 생각하고 있을 텐데요, 그 어느 정도가 어느 정도 일까요? HTTPS의 실질적 사용이 100%에 근접하지는 않을까요?</description>
    </item>
    <item>
      <title>현재 TLS1.3의 낮은 보급, 하지만 개봉박두</title>
      <link>https://cwyang.github.io/2017/12/30/why-tls-1-3-isnt-in-browsers.html/</link>
      <pubDate>Sat, 30 Dec 2017 00:15:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2017/12/30/why-tls-1-3-isnt-in-browsers.html/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://blog.cloudflare.com/why-tls-1-3-isnt-in-browsers-yet/&#34;&gt;Cloudflare의 Nick Sullivan씨의 글&lt;/a&gt;을 풀어본 것입니다.&lt;/p&gt;&#xA;&lt;p&gt;현재 TLS1.3은 호환성 이슈가 많다. 보안성 강화와 빠른 속도를 장점으로 가지는 TLS1.3에 대해서 많은 브라우저들이 구현체를 탑재하였지만 대부분 기본적으로 비활성화 되어있다. 그 문제는 TLS 1.3 프로토콜 자체에 있다기 보다는 미들박스, 즉 이미 많이 도입되어 있는 SSL-proxy들이 TLS1.3 통신에 있어 장애요소가 되기 때문이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>금주 연차입니다.</title>
      <link>https://cwyang.github.io/2017/07/04/welcome-to-jekyll.html/</link>
      <pubDate>Tue, 04 Jul 2017 19:57:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2017/07/04/welcome-to-jekyll.html/</guid>
      <description>&lt;p&gt;금주 연차를 내고 집에서 쉬고 있습니다.&#xA;몸살난 주부의 역할을 체험하고 있으니, 이 옷이 내 몸에 딱 맞는듯합니다.&#xA;이틀째인데 아내에게 벌써 한 소리 듣고 있습니다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>emacs 내장 입력기 사용하기 (XIM 비활성화)</title>
      <link>https://cwyang.github.io/2013/04/09/use-hangul-in-emacs.html/</link>
      <pubDate>Tue, 09 Apr 2013 10:50:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2013/04/09/use-hangul-in-emacs.html/</guid>
      <description>&lt;p&gt;emacs사용시 IBUS/nabi등의 XIM 외장입력기보다 내장입력기를 사용하는 것이 간단하다. &lt;/p&gt;&#xA;&lt;p&gt;다음 방법을 사용하여왔는데 OS재설치 이후에 원하는 대로 안 움직였다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux 시스템 비프 활성화</title>
      <link>https://cwyang.github.io/2013/03/26/activating-linux-system-beep.html/</link>
      <pubDate>Tue, 26 Mar 2013 11:01:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2013/03/26/activating-linux-system-beep.html/</guid>
      <description>&lt;p&gt;Arch Linux설치후 오년여 만족하며 사용하고 있었으나, 최근들어 x-server가 자주 비정상 종료하는 경우가 발생했다. pacman update시에 의존성 문제로 업데이트가 안되어 의존성을 무시하도록 했더니, 업데이트후 부팅조차 불가한 상태가 되어, ubuntu기반의 mint linux 13으로 새로 설치했다. &lt;/p&gt;</description>
    </item>
    <item>
      <title>erlang noproc error</title>
      <link>https://cwyang.github.io/2011/09/26/erlang-noproc-error.html/</link>
      <pubDate>Mon, 26 Sep 2011 17:24:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2011/09/26/erlang-noproc-error.html/</guid>
      <description>&lt;p&gt;요즘 간단한 프락시 서버를 만들고 있다. 만들기 시작한지는 한달전인데 너무 게으르게 진행을 하다보니 아직도 한참 남은 상태다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>여러가지 해묵은 문제 해결: Erlang, Firefox, Xmonad, Xmobar, Haskell</title>
      <link>https://cwyang.github.io/2011/08/19/various-dev-environ-setup.html/</link>
      <pubDate>Fri, 19 Aug 2011 16:22:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2011/08/19/various-dev-environ-setup.html/</guid>
      <description>&lt;p&gt;어제오늘 오늘 그동안 게으름때문에 미뤄두고 살았던 여러가지 묵은 숙제들을 해결했다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Top-Down 개발 vs Bottom-up 개발</title>
      <link>https://cwyang.github.io/2010/11/04/top-down-vs-bottom-up-development.html/</link>
      <pubDate>Thu, 04 Nov 2010 11:59:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2010/11/04/top-down-vs-bottom-up-development.html/</guid>
      <description>&lt;p&gt;개발의 방식을 굳이 구별하자면 다음과 같이 구별할 수 있다. 하나는 &amp;ldquo;사용방식, 요구사항&amp;quot;이 먼저 존재하여 그것을 구현하는 방법을 고민하는 형식이며, 다른 하나는 &amp;ldquo;기술, 기능&amp;quot;이 먼저 존재한 후 그것을 사용하는 방법을 고민하는 형태이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Linux QoS Box Design</title>
      <link>https://cwyang.github.io/2010/11/03/linux-qos-box-design.html/</link>
      <pubDate>Wed, 03 Nov 2010 21:16:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2010/11/03/linux-qos-box-design.html/</guid>
      <description>&lt;p&gt;1st draft, 3 November 2010&lt;br&gt;&#xA;양 철 웅  (cwyang)&lt;br&gt;&#xA;cwyang.tistory.com&lt;/p&gt;</description>
    </item>
    <item>
      <title>Regarding Network Software Robustness</title>
      <link>https://cwyang.github.io/2010/11/02/regarding-network-software-robustness.html/</link>
      <pubDate>Tue, 02 Nov 2010 16:48:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2010/11/02/regarding-network-software-robustness.html/</guid>
      <description>&lt;p&gt;1st draft: 2 November 2010&lt;br&gt;&#xA;양 철 웅  (cwyang)&lt;br&gt;&#xA;cwyang.tistory.com&lt;/p&gt;</description>
    </item>
    <item>
      <title>gdb 팁: 배열, 리스트 쫒아가기</title>
      <link>https://cwyang.github.io/2010/07/10/gdb-tip-array-list-inspection.html/</link>
      <pubDate>Sat, 10 Jul 2010 23:21:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2010/07/10/gdb-tip-array-list-inspection.html/</guid>
      <description>&lt;p&gt;이 팁을 배운 이후 너무 잘 쓰고 있기에, 배운자의 의무로써 널리 알린다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Direct IO란?</title>
      <link>https://cwyang.github.io/2010/07/09/direct-io.html/</link>
      <pubDate>Fri, 09 Jul 2010 22:40:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2010/07/09/direct-io.html/</guid>
      <description>&lt;p&gt;Linux에서 Direct IO는 page cache를 통하지 않고 memory와 IO device사이에 직접 데이터를 송수신하는것이다. Linux의 page cache 메카니즘이 마음에 안들 경우 사용하는 용도이다. 이러한 경우 대개 성능이 중시되므로 구현에 있어서 DMA를 이용하도록 되어 있을 터이고, 그렇기 때문에 메모리 옵셋, 사이즈, 그리고 IO device의 target address에 대해 page alignment 제약이 존재한다. 이 사항은 표준이 정해져 있는 것도 아니기 때문에 사용하는 커널, 파일시스템에 따라 다르게 동작할 수 있다. 예를 들면 page aligment 제약은 커널 2.6전에는 pagesize로 align되어야했으나, 2.6부터는 512 byte단위로만 align되어있으면 된다고.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Netfilter, TCP retransmission, half close등의 이용에 대한 오늘의 이야기</title>
      <link>https://cwyang.github.io/2010/07/09/netfilter-tcp-retransmission-half-close.html/</link>
      <pubDate>Fri, 09 Jul 2010 22:36:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2010/07/09/netfilter-tcp-retransmission-half-close.html/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Netfilter와 connection tracking&lt;/strong&gt;: Linux에서는 netfilter의 connection tracking모듈을 이용하여 세션별 TCP/IP 상태를 추적, 그를 이용할 수가 있다. 당연히 세션에 대한 connection정보 엔트리가 잘 유지되어야하는데, 정보엔트리가 유실되는 상황도 존재한다. 그는 TCP/IP상태별로 timer가 유지되어 두어 일정 시간이 경과하면 connection정보 엔트리가 사라지기 때문이다. SYN attack을 감안하면 SYN 관련 상태는 되도록 작게 유지하는게 좋을 것이다. 그래서 SYN_SENT, SYN_RECV상태의 timeout은 작게 설정된다. ESTABLISHED상태, 즉 데이터 통신이 진행되는 동안은 안정적으로 유지되어야하므로 timeout이 비교적 크게 설정된다. 기타 종료상태들에 대해서는 적절히 작은 값으로 설정된다. connection 정보 엔트리는 시스템의 메모리 리소스를 점유하기 때문에 정상작동을 한다는 가정하에 최대한 적게 유지할 수록 좋다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Multiqueue NIC</title>
      <link>https://cwyang.github.io/2010/06/10/multiqueue-nic.html/</link>
      <pubDate>Thu, 10 Jun 2010 18:46:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2010/06/10/multiqueue-nic.html/</guid>
      <description>&lt;p&gt;10Gbps NIC이 나오게 되면서 Single-core로는 그만한 대역폭을 내기가 어렵게 되었고, 그래서 제안된 것이 multiqueue NIC이다. multiqueue NIC는 각 코어가 고유의 큐와 인터럽트를 할당받는다. RX시에는 NIC가 큐를 골라 (해싱 말고는 방법이 별로 없음) 패킷을 넣어주고, TX시에는 CPU가 큐를 고른다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>NO라고 말하고 싶다</title>
      <link>https://cwyang.github.io/2010/04/21/want-to-say-no.html/</link>
      <pubDate>Wed, 21 Apr 2010 18:05:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2010/04/21/want-to-say-no.html/</guid>
      <description>&lt;p&gt;회사에서의 일이다. 여느때와 마찬가지로 많은 기능요구가 개발쪽으로 흘러들어오고 있다. 다 나름대로의 대책이 있긴 하지만 고객이 원하는 것과 정확히 일치하지는 않는고로 고객 및 영업에서는 이것 안되면 고객이 등돌린다고 PM (제품 매니저)를 압박하고 PM은 바로 연구소로 압박이 들어온다. 그래서 주요 기능만을 우선하고 나머지는 나름대로의 대책으로 고객을 설득하고자 의견을 냈더니 연구소의 사정은 알고 있지만 그래서는 안된다며 아래와 같은 의견이 돌아온다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>코딩후 기도하기</title>
      <link>https://cwyang.github.io/2010/04/06/code-then-prey.html/</link>
      <pubDate>Tue, 06 Apr 2010 22:09:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2010/04/06/code-then-prey.html/</guid>
      <description>&lt;p&gt;오늘도 어김없이 세 시간여 디버깅으로 고생하였다.&lt;/p&gt;&#xA;&lt;p&gt;일찍 들어가서 아이랑 놀거나 맛있는 것을 먹으며 유유로이 시간을 보내고 싶은 것이 사실인데, 왜 맛없는 회사식당밥을 먹고서 머리를 쥐어뜯으며 디버깅에 시간을 보내야 하는가. 그것은 많은 양의 코드가 &amp;ldquo;코딩후 기도하기&amp;quot;라는 접근자세로 만들어져 있기 때문이다. 그리고 그렇게 작성된 코드를 디버깅 하는 데에는 &amp;ldquo;디버깅후 기도하기&amp;quot;가 될 수 밖에 없기 때문이다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>소프트웨어 개발은 다르다</title>
      <link>https://cwyang.github.io/2010/03/17/software-development.html/</link>
      <pubDate>Wed, 17 Mar 2010 21:59:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2010/03/17/software-development.html/</guid>
      <description>회사에서 개발하고 있는 product의 codebase가 점점 커지다보니 &amp;lsquo;품질&amp;rsquo;이 이슈로 떠올랐다. &amp;lsquo;성능&amp;rsquo;과 &amp;lsquo;기능&amp;rsquo; 그리고 &amp;lsquo;초고속 개발&amp;rsquo;이 전부였던 몇해 전을 생각하면 격세지감을 느끼게 된다.</description>
    </item>
    <item>
      <title>블로그를 시작하였습니다.</title>
      <link>https://cwyang.github.io/2010/03/12/new-blog.html/</link>
      <pubDate>Fri, 12 Mar 2010 20:17:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2010/03/12/new-blog.html/</guid>
      <description>블로그를 시작하였습니다. 신변잡기 이야기들을 써보려고 하는데 소프트웨어 개발이 직업인 지라 주로 프로그래밍 및 관련 이야기들로 채워지지 않을까 싶습니다. 블로그 프로필에 적어넣은, 제가 좋아하는 먼 옛날부터 전해지던 이야기를 시작으로 이야기를 써 내려 가보도록 하죠.</description>
    </item>
    <item>
      <title>SSL_read()와 read()는 같은가요?</title>
      <link>https://cwyang.github.io/2009/10/21/SSL-read-vs-read.html/</link>
      <pubDate>Wed, 21 Oct 2009 14:48:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2009/10/21/SSL-read-vs-read.html/</guid>
      <description>네트워크 프로그래밍시에 SSL 연결과의 자료전송도 필요하게 되면 SSL_read()와 SSL_write()를 써야하기 마련이다. 많은 경우 SSL연결 뿐만이 아닌 일반 전송도 필요하므로, 프로그래머는 대개 아래와 같이 연결 종류에 무관한 wrapping API를 만들어서 진행하는데, 이 경우 SSL_read()와 read()의 차이점을 알아야한다.</description>
    </item>
    <item>
      <title>RWH 3번째 읽다</title>
      <link>https://cwyang.github.io/2009/04/01/RWH-read-three-times.html/</link>
      <pubDate>Wed, 01 Apr 2009 10:32:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2009/04/01/RWH-read-three-times.html/</guid>
      <description>1월부터 읽던 RWH를 이제서야 다 읽었다. 첫번째, 두번째 읽을 때와 마찬가지로 정독으로 시작하여 skimming으로 끝나고 말았다. 그래도 읽을때마다 점점 나아지는 것은 정독으로 이해하는 부분이 점점 많아진다는 점이다.</description>
    </item>
    <item>
      <title>Haskell의 폴드(Fold)란 무엇인가요</title>
      <link>https://cwyang.github.io/2009/02/17/what-is-fold-in-haskell.html/</link>
      <pubDate>Tue, 17 Feb 2009 09:39:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2009/02/17/what-is-fold-in-haskell.html/</guid>
      <description>폴드는 reduce라고도 불리우는 연산자로써 리스트의 각 요소에 대해 연산을 수행하여 하나의 결과값을 반환한다. Map &amp;amp; reduce 처럼 map과 같이 흔히 일컬어 지는, 함수형 프로그래밍 방식의 좌청룡 우백호 중의 하나인데, 사실 map 역시도 폴드로 정의가 가능하므로 폴드가 좀 더 파워풀 한 연산자이다.</description>
    </item>
    <item>
      <title>More Monad Tutorials</title>
      <link>https://cwyang.github.io/2009/02/02/more-tutorials-on-haskell.html/</link>
      <pubDate>Mon, 02 Feb 2009 20:53:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2009/02/02/more-tutorials-on-haskell.html/</guid>
      <description>Understanding Monad, for real과 You could have invented Monads! (And maybe you already have.), 두 튜토리얼을 더 읽었다.</description>
    </item>
    <item>
      <title>Yet Another Haskell Tutorial</title>
      <link>https://cwyang.github.io/2009/02/01/yet-another-haskell-tutorial.html/</link>
      <pubDate>Sun, 01 Feb 2009 02:17:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2009/02/01/yet-another-haskell-tutorial.html/</guid>
      <description>Hal Daum ́e III의 Yet Another Haskell Tutoriall을 읽고 있다.</description>
    </item>
    <item>
      <title>1월 Wrap-up: Programming in Haskell</title>
      <link>https://cwyang.github.io/2009/01/23/programming-in-haskell.html/</link>
      <pubDate>Fri, 23 Jan 2009 10:20:00 +0000</pubDate>
      <guid>https://cwyang.github.io/2009/01/23/programming-in-haskell.html/</guid>
      <description>개발에 있어서는 Silver Bullet이 있다고 생각하는 고로, 여러 programming language를 탐험하는 편인데, 올해의 Language는 Haskell. (C -&amp;gt; C++ -&amp;gt; Java -&amp;gt; Ruby -&amp;gt; Erlang -&amp;gt; Lisp -&amp;gt; Haskell)</description>
    </item>
  </channel>
</rss>
