<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>양철웅의 DX 이야기</title>
    <description>short essays on DX, AI, and cloud
</description>
    <link>http://cwyang.github.io/</link>
    <atom:link href="http://cwyang.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 05 Jan 2022 15:21:03 +0900</pubDate>
    <lastBuildDate>Wed, 05 Jan 2022 15:21:03 +0900</lastBuildDate>
    <generator>Jekyll v3.7.4</generator>
    
      <item>
        <title>블럭체인 지갑과 NFT</title>
        <description>&lt;h2 id=&quot;블럭체인-지갑과-nft&quot;&gt;블럭체인 지갑과 NFT&lt;/h2&gt;

&lt;p&gt;NFT나 가상화폐는 디지털 자산이며, 자산의 소유권은 블럭체인상에 저장된다. 자산의 소유자의 비밀키로 자산(의 해시값)을 서명한 내용이 저장되므로 해당 자산에 대한 소유권이 증명된다.
비밀키를 가지고 있으면 자산 양도가 가능하다. 따라서 비밀키의 보관이 매우 중요하다.&lt;/p&gt;

&lt;p&gt;블럭체인 지갑은 해당 블럭체인에서 사용되는 비밀키를 저장하는 소프트웨어이다. 대표적인 블럭체인 지갑으로서 다음과 같은 제품들이 있다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Ethereum: Metamask (https://metamask.io/), Bitski (https://wallet.bitski.com/)&lt;/li&gt;
  &lt;li&gt;Solana: Phantom (https://phantom.app/)&lt;/li&gt;
  &lt;li&gt;Klayton: Klip (https://klipwallet.com/)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;nft-거래&quot;&gt;NFT 거래&lt;/h2&gt;

&lt;p&gt;NFT 거래는 이론적으로는 분산형으로 일어날 수 있지만, 대부분 편의상 거래소에서 이루어진다. NFT 자산의 탐색(explore/browse), 경매, 매매등을 제공하기 때문이다. 사용자의 트랜잭션은 블럭체인 지갑을 매개체로 이루어진다. 해당 NFT 거래소와 거래가 가능한 블럭체인 지갑을 이용해야하며, 해당 블럭체인 지갑에서 금액을 지불하고, 블럭체인 지갑으로 NFT를 받는 형식이다.&lt;/p&gt;

&lt;p&gt;OpenSea에서 제공하는 블럭체인 지갑은 아래와 같다. 이들 중 가장 널리 사용되는 메타마스크의 예를 들어 어떠한 보안 위협이 있는지 살펴보자.
&lt;img src=&quot;http://cwyang.github.io/assets/images/NFT_wallets_opensea.png&quot; alt=&quot;Opensea에서 지원하는 블럭체인 지갑들&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;메타마스크-보안-이슈&quot;&gt;메타마스크 보안 이슈&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;http://cwyang.github.io/assets/images/NFT_metamask.png&quot; alt=&quot;메타마스크 지갑&quot; /&gt;
메타마스크는 크롬 브라우저 플러그인형태이며, 블록체인 트랜잭션이 필요한 비밀키(및 공개키 쌍)을 관리한다. NFT/가상화폐 서비스가 비밀키가 필요한 작업을 해야할 때 메타마스크에 작업을 요청하고, 메타마스크는 web3.js API를 이용하여 브라우저캐시에 저장된 비밀키를 접근하게 된다.&lt;/p&gt;

&lt;p&gt;브라우저캐시에는 사용자의 비밀키가 패스워드로 암호화 되어 저장되어 있다.&lt;/p&gt;

&lt;p&gt;사용자가 메타마스크를 사용함에 있어서 관리해야하는 정보는 두 가지이다&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;패스워드: 브라우저 로그인 시에 사용&lt;/li&gt;
  &lt;li&gt;비밀 구문: 새로운 접근 환경 또는 패스워드 분실시 사용&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;패스워드는 저장된 비밀키를 복호화 하기 위하여 필요하다.
비밀 구문은 날것의 비밀키를 사람이 저장하기 쉬운 형태로 코드화 한 것이다.&lt;/p&gt;

&lt;p&gt;해커가 패스워드를 입수하면, 해당 메타마스크가 구동되는 PC에 접근하여 비밀키를 알아낸 후 자산을 탈취할 수 있다.
해커가 비밀구문을 입수하면, 블럭체인은 누구에게나 오픈되어 있으므로 바로 자산을 탈취할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;그러면&quot;&gt;그러면?&lt;/h2&gt;
&lt;p&gt;안전한 NFT거래를 위해서는 무엇보다 패스워드와 비밀 구문을 관리하여 유출되지 않도록 한다.
또한 지갑의 비밀키가 저장된 영역 (브라우저캐시)을 보호해야한다. 암호화된 비밀키를 대상으로 Brute-force 공격이 가능하기 때문이다.
또한 비밀키 관리를 하드웨어 지갑이나 HW Trusted Environment에 위임하여 안전성을 높일 수 있다.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Jan 2022 15:13:17 +0900</pubDate>
        <link>http://cwyang.github.io/2022/01/05/nft_metamask.html</link>
        <guid isPermaLink="true">http://cwyang.github.io/2022/01/05/nft_metamask.html</guid>
        
        <category>blog</category>
        
        <category>blockchain</category>
        
        <category>metamask</category>
        
        <category>nft</category>
        
        
      </item>
    
      <item>
        <title>디파이의 위험</title>
        <description>&lt;p&gt;2022년을 맞이하여 새로운 분야인 NFT/디파이/블럭체인을 공부해볼까 마음을 먹고
신년 첫날 알고랜드 디파이 서비스인 &lt;a href=&quot;https://tinyman.org&quot;&gt;tinyman.org&lt;/a&gt;의 LP풀에 $30를 예치해보았는데…&lt;/p&gt;

&lt;p&gt;그 다음날인 1월 2일 smart contract exploit 공격이 있었다.
대부분의 LP풀은 자산 가격이 다른 두 개의 토큰을 쌍으로 예치하는 방식인데,
smart contract의 헛점을 이용하여 LP풀에서 서로 다른 쌍의 토큰을 인출하는 게 아니고
같은 종류의 토큰을 인출할 수 있었다고 한다.&lt;/p&gt;

&lt;p&gt;예를 들면 100원짜리와 1원짜리를 합쳐서 101원씩 인출해야하는데
100원짜리 2개씩 인출할 수 있었던 것 같다.
&lt;img src=&quot;http://cwyang.github.io/assets/images/tinyman3.jpg&quot; alt=&quot;알립니다: 망했어요. 털렸어요.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그 결과로 LP pool의 대부분이 탈취되어,
나의 자산도 &lt;strong&gt;$30&lt;/strong&gt;에서 &lt;strong&gt;$0.16&lt;/strong&gt;으로 &lt;strong&gt;1/200&lt;/strong&gt;토막이 나버렸다.
&lt;img src=&quot;http://cwyang.github.io/assets/images/tinyman1.jpg&quot; alt=&quot;$60이 되라고 $30을 넣었는데 (나 부자되나..)&quot; /&gt;
&lt;img src=&quot;http://cwyang.github.io/assets/images/tinyman2.jpg&quot; alt=&quot;$0.16이 되어 1/200토막이 나버렸다. (이게뭐야!!!)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;블럭체인/NFT는 자산이 움직이는 세계이고, 이 세계에서는 사이버 보안이 매우 중요하다.. 
는 것을 온 몸 바쳐서 경험한 새해 벽두.&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Jan 2022 15:45:00 +0900</pubDate>
        <link>http://cwyang.github.io/2022/01/03/tinyman-gets-attack.html</link>
        <guid isPermaLink="true">http://cwyang.github.io/2022/01/03/tinyman-gets-attack.html</guid>
        
        <category>blog</category>
        
        <category>defi</category>
        
        <category>algorand</category>
        
        <category>tinyman</category>
        
        <category>exploit</category>
        
        <category>security</category>
        
        
      </item>
    
      <item>
        <title>이번 Log4J 자바취약점 요약</title>
        <description>&lt;p&gt;이번 자바취약점 CVE-2021-44228에 대해 짧게 씁니다.&lt;/p&gt;

&lt;p&gt;무엇인가?&lt;br /&gt;
➡️자바관련 무엇인가 패키지에 구멍이 있어서 해커가 원격커맨드를 실행시킬 수가 있다. 랜섬웨어라던가 랜섬웨어라던가..&lt;/p&gt;

&lt;p&gt;좀더 자세히.&lt;br /&gt;
➡️취약한 부분이 관리를 위한 로깅 모듈이다. 해커가 브라우저에 특정 메세지를 집어넣고, 그것이 서버에서 로깅(기록)이 되는 순간 원격 커맨드가 실행된다.&lt;/p&gt;

&lt;p&gt;어떻게 막나?&lt;br /&gt;
➡️취약한 부분을 패치하면 원격 커맨드가 실행안된다. 또는 방화벽(웹방화벽)단에서 원격 커맨드를 실행하도록 하는 패턴을 막는다.&lt;/p&gt;

&lt;p&gt;심각한가?&lt;br /&gt;
➡️그렇다. 인터넷의 많은 부분이 자바로 이루어져있기 때문이다. 그리고 재현방법이 너무 쉽다. imperva의 아래 그림 참조. 13시간만에 100만건 이상의 공격이 있다고..&lt;/p&gt;

&lt;p&gt;패치하면 된다며?&lt;br /&gt;
➡️모든 서버 관리팀들이 FAANG네카라쿠배는 아니잖아요. 관리 안되는 서버들 많이 있는거 아시면서..&lt;/p&gt;

&lt;p&gt;급 회사광고&lt;br /&gt;
➡️수산아이앤티 웹방화벽 &lt;a href=&quot;https://www.soosanint.com/contents.php?con_id=solution4&quot;&gt;https://www.soosanint.com/contents.php?con_id=solution4&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cwyang.github.io/assets/images/log4j_imperva.jpg&quot; alt=&quot;재현이 쉬워 전파가 빠르다. (source: imperva)&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 14 Dec 2021 12:08:00 +0900</pubDate>
        <link>http://cwyang.github.io/2021/12/14/cve-2021-44228.html</link>
        <guid isPermaLink="true">http://cwyang.github.io/2021/12/14/cve-2021-44228.html</guid>
        
        <category>blog</category>
        
        <category>vulnerability</category>
        
        <category>log4j</category>
        
        <category>java</category>
        
        <category>jndi</category>
        
        
      </item>
    
      <item>
        <title>인간이 중요해진 시대 - CES 2021</title>
        <description>&lt;p&gt;오늘 CES2021에 대한 강연을 듣고 생각을 정리하여 봅니다. 기업의 눈이 아닌 사람의 눈으로 우리 시대의 변화를 바라보라는 메세지를 받은 강연이었습니다. 좋은 강연을 마련해주신 회사와 발표해주신 이용덕교수님께 감사드립니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;CES 2020의 주제가 &lt;code class=&quot;highlighter-rouge&quot;&gt;기술의 급변 + AI war + 비즈니스 영역붕괴 + 미래 경험의 가치&lt;/code&gt;였다면,
CES 2021의 주제는 &lt;code class=&quot;highlighter-rouge&quot;&gt;언택트 + 홈코노미 + ESG&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;이는 100% COVID-19가 가지고 온 라이프스타일의 파괴적 변화때문.&lt;/p&gt;

&lt;p&gt;뉴노멀의 등장. 베터 노멀 Better Normal (LG의 캐치프레이즈)의 추구. 일(Work)이 바뀌고 (onoff mix), 교육이 바뀐다. (정신적 치유/학습의 질)&lt;/p&gt;

&lt;p&gt;2021년. 무엇보다 인간의 생활이 중요해진 시대.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cwyang.github.io/assets/images/life-is-on-lg-ces2021.png&quot; alt=&quot;당연했던 것들이 추억이 되어버린 시대&quot; /&gt;&lt;/p&gt;

&lt;p&gt;또한 “디지털 대항해시대” → 데이터를 바탕으로 클라우드에서 새로운 비즈니스 영역을 찾아라.&lt;/p&gt;

&lt;p&gt;언택트로 인해 “체험”이 없는 세계.
그 결과로
“스토리 텔링”이 중요해진다.
스토리가 체험을 대신할 수는 없지만, 스토리가 있으면 관심과 신뢰를 전달할 수 있기 때문.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Trend: 이커머스, 원격진료, 스트리밍 비디오, 원격 교육&lt;/li&gt;
  &lt;li&gt;Tool: AI, RPA, NLP, 클라우드&lt;/li&gt;
  &lt;li&gt;테크놀러지의 구분이 없이 모든것이 변화하는 디지털 트랜스포메이션에서 토털 트랜스포메이션의 시대.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;사람 관점에서의 몇가지 기술들&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;LIFE = CONNECT + CARE + COMFORT&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=bQd2J-53PTU&quot;&gt;삼성의 “Better Normal for All”&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Y-7coIGK7IM&quot;&gt;LG의 “Life is ON”&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=z4rSG8f8N00&quot;&gt;AI-pet: MOFLIN. AI Model학습→Cloud→배포&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=m9AL266C0lc&quot;&gt;삼성 휴대폰 업사이클링 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=bNSCIuHKhro&quot;&gt;Shower Power: 수력발전 스피커 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=OWVy_bq8VFI&quot;&gt;AI 스킨케어: 아모레 립스틱 색 추천, 맞춤형 토너 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Yj0R1RgyIx4&quot;&gt;LG의 버추얼 아바타 레아 &lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;필립스 바이오스티커&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;p.s. 행사자체 면에서는 줄어든 관객(적은 관심), 교류 부족, 체험 불가, 확인 불가, 지루한 진행.
내년의 CES는 이 위기를 극복할 수 있을 것인지?&lt;/p&gt;

</description>
        <pubDate>Thu, 04 Feb 2021 00:00:00 +0900</pubDate>
        <link>http://cwyang.github.io/2021/02/04/ces-2021.html</link>
        <guid isPermaLink="true">http://cwyang.github.io/2021/02/04/ces-2021.html</guid>
        
        <category>blog</category>
        
        <category>ces</category>
        
        <category>digital transformation</category>
        
        
      </item>
    
      <item>
        <title>도커허브 이미지 풀 제약을 하버로 해결하기</title>
        <description>&lt;h2 id=&quot;tl-dr&quot;&gt;TL; DR&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;이미지 다운이 막혔어요. 도커허브 미워요.&lt;/li&gt;
  &lt;li&gt;하버 짱이에요.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;도커허브에서-무턱대고-이미지를-당기다보면-에러가-난다&quot;&gt;도커허브에서 무턱대고 이미지를 당기다보면 에러가 난다.&lt;/h2&gt;

&lt;p&gt;도커허브에서 무료사용자들에 대해 pul rate limit를 부과하기 시작했다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ip별 6시간에 100번&lt;/li&gt;
  &lt;li&gt;무료사용자 id하나에 대해 6시간에 200번&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;연구소 기계들이 NAT아래에 있다보니 이미지 몇개 당겨오다보면 금방 한계에 부딪히게 되고 만다. 쿠버네티스 파드가 뜨지 않는다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NAME             READY   STATUS             RESTARTS   AGE
pod/test         2/3     ImagePullBackOff   0          11m
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;로그를 보면 아래와 같이 도커허브에서 알려주는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Too Many Requests&lt;/code&gt; 메세지가 보인다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
Normal   Pulling    7m4s (x3 over 8m22s)    kubelet   Pulling image &quot;alpine:latest&quot;
Warning  Failed     6m50s (x2 over 8m8s)    kubelet   Failed to pull image &quot;alpine:latest&quot;: rpc error: code = Unknown desc = failed to pull and unpack image &quot;docker.io/library/alpine:latest&quot;: failed to copy: httpReaderSeeker: failed open: unexpected status code https://registry-1.docker.io/v2/library/alpine/manifests/sha256:d9a7354e3845ea8466bb00b22224d9116b183e594527fb5b6c3d30bc01a20378: 
  429 Too Many Requests - Server message: toomanyrequests: You have reached your pull rate limit. You may increase the limit by authenticating and upgrading: https://www.docker.com/increase-rate-limit
Warning  Failed     6m50s (x3 over 8m8s)    kubelet   Error: ErrImagePull
Warning  Failed     3m23s (x12 over 7m18s)  kubelet   Error: ImagePullBackOff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;이 상황을 타개하기 위해 이미지 레지스트리 서버인 &lt;a href=&quot;https://goharbor.io/&quot;&gt;Harbor&lt;/a&gt;를 설치하기로 했다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/goharbor/harbor/releases&quot;&gt;다운로드 페이지&lt;/a&gt;에서 인스톨러를 다운받은 이후 &lt;code class=&quot;highlighter-rouge&quot;&gt;harbor.yml.tmpl&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;harbor.yml&lt;/code&gt;로 바꾼후 안의 내용을 보고 수정한다. TCP port와 SSL인증서 값을 설정한 후 설치하면 바로 구동된다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
[cwyang@jupiter harbor]$ sudo ./install.sh
[Step 0]: checking if docker is installed ...
Note: docker version: 19.03.6
...
Creating redis ...
Creating harbor-core ...
Creating nginx ...
Creating harbor-jobservice ...
✔ ----Harbor has been installed and started successfully.----
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;웹브라우저로 접속하고, admin password를 바꾼 후, proxy cache를 설정해보자.
하버 프락시 캐시를 설정하고 사용자가 프락시 캐시를 요청하면 하버는 이미지를 origin에서 받아서 제공하는 한편 그를 저장해 두고 다음부터는 저장된 이미지를 제공한다. 이미지 요청이 오면 origin 서버로 확인을 하게 되는데 다음과 같이 4가지 경우를 구분하여 처리한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이미지가 안바뀜 → 저장된 이미지 제공&lt;/li&gt;
  &lt;li&gt;이미지가 바뀜 → 새 이미지를 다운받아 제공&lt;/li&gt;
  &lt;li&gt;origin에 연결안됨 → 저장된 이미지 제공&lt;/li&gt;
  &lt;li&gt;이미지가 삭제됨 → 이미지 제공하지 않음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;하버가 매 요청마다 origin에 확인을 할 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt; 요청을 이용하는데,
도커허브 ratelimiter가 &lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;는 (현재까지는) 무제한 허용을 해 주기 때문에 안심하고 사용할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;하버-설정하기&quot;&gt;하버 설정하기&lt;/h2&gt;

&lt;p&gt;레지스트리 메뉴에서 새 엔드포인트를 생성한다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cwyang.github.io/assets/images/harbor/harbor01.png&quot; alt=&quot;엔드포인트 생성&quot; /&gt;&lt;/p&gt;

&lt;p&gt;그 다음에는 프로젝트 메뉴에서 프락시 캐시 타입의 프로젝트를 생성한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cwyang.github.io/assets/images/harbor/harbor02.png&quot; alt=&quot;프락시 캐시 프로직트  생성&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;설정된-주소로-컨테이너-이미지-가져오기&quot;&gt;설정된 주소로 컨테이너 이미지 가져오기&lt;/h2&gt;
&lt;p&gt;이제 됐다. 사용하기 위해서는 이미지 URL 앞에 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;harbor_server_name&amp;gt;/&amp;lt;proxy_project_name&amp;gt;/&lt;/code&gt;을 붙여주어야한다. 그리고 toplevel 이미지를 당기려면 앞에 &lt;code class=&quot;highlighter-rouge&quot;&gt;library&lt;/code&gt; path를 붙여준다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;​​# pull alpine:latest
​​cwyang@cwyang ~ $ docker pull jupiter.soosanint.com:4433/proxy/library/alpine:latest
​​latest: Pulling from proxy/library/alpine
​​596ba82af5aa: Pull complete
​​Digest: sha256:d9a7354e3845ea8466bb00b22224d9116b183e594527fb5b6c3d30bc01a20378
​​Status: Downloaded newer image for jupiter.soosanint.com:4433/proxy/library/alpine:latest
​​jupiter.soosanint.com:4433/proxy/library/alpine:latest
​​
​​#pull networkservicemesh/test-common:v0.2.0
​​cwyang@cwyang ~ $ docker pull jupiter.soosanint.com:4433/proxy/networkservicemesh/test-common:v0.2.0
​​v0.2.0: Pulling from proxy/networkservicemesh/test-common
​​89d9c30c1d48: Pull complete
​​139dffae8422: Pull complete
​​Digest: sha256:6ba5743738a0244d9c7f69ff2f2ac1fbd7598eb8ff2f9b40ddba8c533d918b21
​​Status: Downloaded newer image for jupiter.soosanint.com:4433/proxy/networkservicemesh/test-common:v0.2.0
​​jupiter.soosanint.com:4433/proxy/networkservicemesh/test-common:v0.2.0
​​cwyang@cwyang ~ $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이후 콘솔을 확인하면 아래와 같이 캐시된 것을 알 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cwyang.github.io/assets/images/harbor/harbor03.png&quot; alt=&quot;저장된 컨테이너 이미지들&quot; /&gt;&lt;/p&gt;

&lt;p&gt;기본적으로 캐시된 이미지는 7일간 유효하다. 설치시에 &lt;code class=&quot;highlighter-rouge&quot;&gt;--with-trivy&lt;/code&gt; 옵션을 주면 저장 이미지에 대해서 취약점 스캐닝을 하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;trivy&lt;/code&gt;가 같이 설치된다.&lt;/p&gt;

&lt;p&gt;이제 파드 매니페스트 파일에서 이미지 레지스트리주소를 하버 주소로 바꾸고 사용하도록 하자.&lt;/p&gt;
</description>
        <pubDate>Wed, 20 Jan 2021 15:02:41 +0900</pubDate>
        <link>http://cwyang.github.io/2021/01/20/using-harbor-to-avoid-dockerhub-pull-ratelimit.html</link>
        <guid isPermaLink="true">http://cwyang.github.io/2021/01/20/using-harbor-to-avoid-dockerhub-pull-ratelimit.html</guid>
        
        <category>blog</category>
        
        <category>docker</category>
        
        <category>dockerhub</category>
        
        <category>harbor</category>
        
        <category>container</category>
        
        <category>k8s</category>
        
        <category>kubernetes</category>
        
        
      </item>
    
      <item>
        <title>맥OS 앱 코드사인 및 공증하기</title>
        <description>&lt;p&gt;윈도우즈와 마찬가지로 맥 생태계에서도 인터넷으로 다운 받는 앱에 대해서는 보안검증이 이루어진다.
앱을 누가 만들었는지를 알 수 없거나 악성 코드 체크가 이루어지지 않는 경우 아래 그림과 같이
사용자에게 물어보거나, 설정에 따라서 실행을 아예 막아버리기도 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cwyang.github.io/assets/images/osx_gatekeeper_bad.png&quot; alt=&quot;앱이 의심스러워 실행을 금지합니다!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;따라서 앱의 배포를 위해서는 코드사인과 공증 작업이 필요하다. 
Xcode앱인 경우 Xcode에서 대부분 알아서 해 줄 것인데, 수작업으로 작업을 진행해야 할 때도 있다.
당신(이라고 쓰고 미래의 나 라고 읽자)은 수작업으로 진행해야 하기 때문에 이 글을
읽고 있으리라.
자세한 내용은 아래 관련정보에서 얻을 수 있지만, 미래의 나에게 요약하는 의미로
중요한 것을 별도로 정리한다.
&lt;a href=&quot;https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution&quot;&gt;관련정보&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;코드사인-code-sign&quot;&gt;코드사인 (Code-sign)&lt;/h1&gt;

&lt;p&gt;앱에 제작자를 새겨 넣는 작업이다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;맥 개발자 프로그램이 필요하다. 가입한다. (유료. 연간 $99)&lt;/li&gt;
  &lt;li&gt;https://developer.apple.com/ 에 방문하여 Developer-ID 인증서를 만든다.
만든 인증서는 다운받아 컴의 Keychain access에 저장한다.
Keychain access에서 해당 인증서의 Private-key를 찾을 수 없다면 뭔가 잘못된 것.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;코드사인을 한다.&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;codesign --options=runtime -s 'Developer ID Application' MyApp.app&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;코드사인이 잘 안된다면 앱의 모든 화일을 대상으로 extended attribute를 지우고 다시 시도한다.&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find MyApp.app | xargs xattr -xc&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;공증-notarization&quot;&gt;공증 (Notarization)&lt;/h1&gt;

&lt;p&gt;코드사인된 앱을 애플에 보내서 기본적인 검사를 진행하고 OK도장을 받는 작업이다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Xcode command toolset을 설치한다. &lt;code class=&quot;highlighter-rouge&quot;&gt;xcrun altool&lt;/code&gt; 명령어가 성공해야한다.&lt;/li&gt;
  &lt;li&gt;다음 명령어를 이용하여 공증을 시도한다. 잘 되었으면 UUID가 반환된다.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% xcrun altool --notarize-app
            --primary-bundle-id &quot;com.example.ote.zip&quot;
            --username &quot;AC_USERNAME&quot;
            --password &quot;@keychain:AC_PASSWORD&quot;
            --asc-provider &amp;lt;ProviderShortname&amp;gt;
            --file OvernightTextEditor_11.6.8.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;username: 개발자 ID&lt;/li&gt;
      &lt;li&gt;password: 개발자 ID 비밀번호가 &lt;strong&gt;아니고&lt;/strong&gt; 앱개발 전용 비밀번호이다. &lt;a href=&quot;https://appleid.apple.com&quot;&gt;애플아이디 설정페이지&lt;/a&gt; 에서 지정하는 앱개발용 암호이다.&lt;/li&gt;
      &lt;li&gt;asc-provider: &lt;code class=&quot;highlighter-rouge&quot;&gt;xcrun altool --list-providers -u &quot;AC_USERNAME&quot; -p &quot;@keychain:AC_PASSWORD&quot;&lt;/code&gt;을 이용하여 얻어낸 provider id를 사용한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;공증 상태를 체크하기 위해서는 아래 명령어를 사용한다.
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% xcrun altool --notarization-history 0 -u &quot;AC_USERNAME&quot; \
 -p &quot;@keychain:AC_PASSWORD&quot;
% xcrun altool --notarization-info \
 2EFE2717-52EF-43A5-96DC-0797E4CA1041 -u &quot;AC_USERNAME&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;공증이 잘 끝났으면 &lt;code class=&quot;highlighter-rouge&quot;&gt;xcrun stapler staple &quot;Overnight TextEditor.app&quot;&lt;/code&gt; 명령어를 이용하여 공증 결과를 화일에 첨부한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이제 해당 파일을 웹 서버에 올리고 다운을 받아보자. 다음과 같이 실행할 것인지 물어본다면 성공!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://cwyang.github.io/assets/images/osx_gatekeeper_ok.png&quot; alt=&quot;인터넷에서 받은 앱을 실행하시겠어요?&quot; /&gt;&lt;/p&gt;

&lt;p&gt;하얗게 불타버린 오늘 하루였다. 커피한잔 사주실분!!!&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.buymeacoffee.com/1.0.0/button.prod.min.js&quot; data-name=&quot;bmc-button&quot; data-slug=&quot;cwyang&quot; data-color=&quot;#FFDD00&quot; data-emoji=&quot;&quot; data-font=&quot;Cookie&quot; data-text=&quot;Buy me a coffee&quot; data-outline-color=&quot;#000000&quot; data-font-color=&quot;#000000&quot; data-coffee-color=&quot;#ffffff&quot;&gt;&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Dec 2020 18:12:00 +0900</pubDate>
        <link>http://cwyang.github.io/2020/12/09/osx-codesign-notarization.html</link>
        <guid isPermaLink="true">http://cwyang.github.io/2020/12/09/osx-codesign-notarization.html</guid>
        
        <category>blog</category>
        
        <category>macos</category>
        
        <category>osx</category>
        
        <category>code-sign</category>
        
        <category>notarization</category>
        
        
      </item>
    
      <item>
        <title>클라우드 퍼스트 단상</title>
        <description>&lt;p&gt;클라우드 퍼스트 단상&lt;/p&gt;

&lt;p&gt;코로나로 인해 점심식사를 배달주문하여 먹고 있다.
배달의 민족덕분에 여러가지 메뉴를 질리지 않게 돌려가면서 먹고 있다. 예전같았으면 계속 중국집에 계속 배달했겠지. 예전보다 음식값이 비싸다고 느끼지만 그게  배달의 민족때문인지 물가가 올라서 그런건지는 잘 모르겠다. 소비자 입장에서 배달의 민족은 좋은 서비스 맞다.&lt;/p&gt;

&lt;p&gt;세상에 공짜가 어디있겠나. 누군가는 손해를 봐야한다. 경쟁력이 없는 음식점은 안간다. 코로나로 안가고 맛이 덜하여 주문을 안한다. 저 멀리 위치한 맛집에 대해 그냥 장사잘되서 좋겠구나 라고 생각하고 있었지만 이제 그 집으로 손님들이 다 가버렸다. 높은 수수료는 사회 문제까지 되고 있다.&lt;/p&gt;

&lt;p&gt;아무도 내 편을 들어주는 사람이 없다. 적기조례, 자동차가 다니는 세상에 말은 사라지는게 당연하다고 한다. 손님들은 편하고 선택권이 많아지니 이런 시대의 흐름을 좋아한다. 좀 비싸지는건 당연하다고 생각하며 돈을 지불하는데 돈은 플랫폼업체들이 가지고 간다.&lt;/p&gt;

&lt;p&gt;미국은 이미 10년전에 클라우드 퍼스트 전략을 발표했다. 우리 정부도 클라우드 퍼스트. 많은 기업들도 디지털 트랜스포메이션이라는 기치 아래 클라우드로 가고 있다. 클라우드로 가면 탄력적인 운영으로 인해 IT 비용은 줄어들고 자원이 효율화된다. 클라우드가 아닐때  100으로 운영되고 있었던 것이 클라우드로 가면 10으로 줄어들 수 있겠다. 그런데.. 90%의 효율화 달성은 90%의 시장 감소를 수반하지 않을까? 감소된 시장이 다른 곳에서 그만큼 생겨날까? 생겨난다면 누가 그것을 가지고 가게 될까…&lt;/p&gt;

&lt;p&gt;산업혁명 후 마차를 몰던 마부들이 마주한 세계는 고도의 산업발전시기였다. 클라우드 퍼스트로 인해 변화될 시장에서 기존의 IT기업들이 마주할 현실은 무엇일까? 기회의 땅이 기다리고 있을까, 아니면 메마른 땅이 기다리고 있을까.&lt;/p&gt;
</description>
        <pubDate>Sat, 05 Dec 2020 20:17:00 +0900</pubDate>
        <link>http://cwyang.github.io/2020/12/05/what-does-cloud-computing-bring-to-us.html</link>
        <guid isPermaLink="true">http://cwyang.github.io/2020/12/05/what-does-cloud-computing-bring-to-us.html</guid>
        
        <category>blog</category>
        
        <category>cloud-first</category>
        
        <category>politics</category>
        
        
      </item>
    
      <item>
        <title>한 세션을 여러번 정책 라우팅하니까 NAT가 안돼요</title>
        <description>&lt;h1 id=&quot;tl-dr&quot;&gt;TL; DR&lt;/h1&gt;

&lt;p&gt;같은 5-tuple의 패킷을 정책 라우팅으로 iptables를 여러번 태운다면
conntrack이 개입하는 nat테이블의 경우 zone으로 분리를 해줘야해요.&lt;/p&gt;

&lt;h1 id=&quot;문제&quot;&gt;문제&lt;/h1&gt;

&lt;p&gt;호스트 머신에서 투명 프락시 네트워크를 구성하려고 합니다.
실제 클라이언트와 프록시는 컨테이너가 될 것이지만, 실험을 위해서
리눅스 네임스페이스로 구별되는 환경을 구성하였습니다.
클라이언트에서 인터넷으로의 트래픽을 프락시 네임스페이스로 유도하기 위해서
정책 라우팅을 사용하였습니다.&lt;/p&gt;

&lt;p&gt;I’m trying to setup transparent proxying networks on my host.
Real Client and Proxy targets are containters but in this experiment I use netns (network namespace) separated envinroment.
To redirect client traffic to proxy transparently, I use policy routing.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Client (C)         Proxy (P)
10.10.1.1/24      10.10.2.1/24
    veth0             veth0
     |                 |
  veth pair         veth pair
     |                 |
 -----------(HOST)--------------
client-veth0       proxy-veth0
10.10.1.2/24      10.10.2.2/24
     |                 |            172.16.202.30
     +-----------------+-------------- enp4s0 ---- INTERNET
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;정책 라우팅은 &lt;code class=&quot;highlighter-rouge&quot;&gt;ip rule&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;ip route&lt;/code&gt;, 그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;iptables&lt;/code&gt;를 사용하여 아래와 같이
설정하였습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Client-&amp;gt;Proxy]
ip rule:  from 10.10.1.0/24 iif client-veth0 lookup 100
ip route: (100) default via 10.10.2.1 dev proxy-veth0
[Proxy-&amp;gt;Internet]
ip route: (master) default via 172.16.202.1 dev enp4s0 proto static metric 100
iptables: -t nat -A POSTROUTING -s 10.10.10.1/32 -o enp4s0 -j MASQUERADE
[Internet-&amp;gt;Proxy]
ip rule:  from all to 10.10.1.0/24 iif enp4s0 lookup 100
ip route: (100) default via 10.10.2.1 dev proxy-veth0
[Proxy-&amp;gt;Client]
ip rule:  from all to 10.10.1.0/24 iif proxy-veth0 lookup 101
ip route: (101) default via 10.10.1.1 dev client-veth0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;문제는 클라이언트에서 인터넷을 접속할 때 NAT가 이루어지지 않는다는 것입니다.
클라이언트에서 8.8.8.8으로 ping을 할 경우 인터넷 구간으로 10.10.1.1 소스 IP가
그대로 출력됩니다.&lt;/p&gt;

&lt;p&gt;이 설정의 특이한 점이라면 정책 라우팅으로 같은 5-tuple 패킷을 iptables에
여러번 보내는 것입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;iptales -L -nv&lt;/code&gt;로 패킷 카운트를 보면 MASQUERADE
룰 말고는 다 매치가 되는데 MASQUERADE만 매치가 안되는 이유는 무엇인가요?&lt;/p&gt;

&lt;p&gt;Problem is, When I ping 8.8.8.8 from Client, within client netns, source ip masquerading does not happen. iptables masquerade rule does not match and defaults to ACCEPT . I expect that tcpdump on enp4s0 shows 172.16.202.30 –&amp;gt; 8.8.8.8, but it shows 10.10.1.1 –&amp;gt; 8.8.8.8, without source IP masquerading. Why doesn’t NAT happen?&lt;/p&gt;

&lt;h1 id=&quot;해결&quot;&gt;해결&lt;/h1&gt;

&lt;p&gt;conntrack 때문입니다.&lt;/p&gt;

&lt;p&gt;nat테이블은 컨트랙의 NEW 상태 패킷만을 처리합니다.
첫번째 iptables nat테이블 처리시 NEW상태가 되기 때문에
두번째 iptables에 들어왔을때 매치가 되지 않는 것입니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://lwn.net/Articles/370152/&quot;&gt;Conntrack zone&lt;/a&gt;을 이용하여
conntrack의 key를 5-tuple에서 zone을 포함한 6-tuple로 만들어 주어 해결할 수 있습니다.
zone이 다르면 새로운 연결이라고 판단하여 각기 nat테이블 처리를 하게되는 것입니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iptables -t raw -A PREROUTING -i client-veth0 -j CT --zone 1
iptables -t raw -A PREROUTING -i proxy-veth0 -d 10.10.1.0/24 -j CT --zone 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It’s because conntrack gets involved.&lt;/p&gt;

&lt;p&gt;Iptables nat table handles the packet with NEW state.
When a packet traverses nat table, conntrack adds a NEW entry.
The packet with same 5-tuple enters nat table again,
it is matched against conntrack database and skipped processing
since the packet is on conntrack database&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://lwn.net/Articles/370152/&quot;&gt;Conntrack zone&lt;/a&gt; can be used to 
make a packet 6-tuple, including zone,  and be processed at nat table multiple times.&lt;/p&gt;

&lt;h1 id=&quot;코드&quot;&gt;코드&lt;/h1&gt;

&lt;p&gt;conntrack zone을 분리한 펄 코드입니다.&lt;/p&gt;

&lt;div class=&quot;language-perl highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;strict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dryrun&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ip&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$iptables&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;iptables&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nic_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;veth0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;sub &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;run_cmd&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;shift&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;$cmd\n&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dryrun&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$cmd &amp;gt; /dev/null&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;  Error: ($result) $cmd \n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;sub &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;iptables_add&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;@_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;run_cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$iptables -D $target $line&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;run_cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$iptables -A $target $line&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;sub &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ip&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;shift&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;@_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cmd&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;$ip netns exec $ns $ip&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;$ip&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;run_cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;$cmd $line&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;sub &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;make_ns&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nsaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$hostaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;@_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\//&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$hostaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;netns del $target&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link del $target-$nic_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# create namespace&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;netns add $target&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# create a veth pair&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link add $target-$nic_name type veth peer name $nic_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link set $nic_name netns $target&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# address setup&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;addr add $hostaddr dev $target-$nic_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link set $target-$nic_name up&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# address setup on target namespace&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;addr add $nsaddr dev $nic_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;link set $nic_name up&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;link set lo up&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;route add default via $host dev $nic_name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;make_ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;client&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;10.10.1.1/24&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;10.10.1.2/24&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;make_ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;proxy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;&quot;10.10.2.1/24&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;10.10.2.2/24&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;route_setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;10.10.10.0/24&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;sub &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;route_setup&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$net_client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;10.10.1.0/24&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$net_proxy&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;10.10.2.0/24&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$gw_client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;10.10.1.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$gw_proxy&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;10.10.2.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nic_client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;client-veth0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nic_proxy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;proxy-veth0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nic_internet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;enp4s0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# debug&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;iptables_add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PREROUTING&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-t raw -j TRACE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;# we need to do following things like to enable netfliter logging&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;# sysctl -w net.netfilter.nf_log_all_netns=1&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;# sysctl -w &quot;net.netfilter.nf_log.2&quot;=nf_log_ipv4&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# flush&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;route flush table 100&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;route flush table 101&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# OUTBOUND: src --&amp;gt; proxy&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;rule del from $net_client iif $nic_client prio 100 table 100&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;rule add from $net_client iif $nic_client prio 100 table 100&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# INBOUND: internet --&amp;gt; proxy&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;rule del to $net_client iif $nic_internet prio 102 table 100&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;rule add to $net_client iif $nic_internet prio 102 table 100&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# RT: route to proxy&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;route add default via $gw_proxy dev $nic_proxy table 100&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# OUTBOUND: proxy --&amp;gt; internet&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# proxy --&amp;gt; default route w/ masquerade&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;iptables_add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;POSTROUTING&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-t nat -s $net_client ! -d $net_client -o $nic_internet -j MASQUERADE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# INBOUND: proxy --&amp;gt; client&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;rule del to $net_client iif $nic_proxy prio 101 table 101&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;rule add to $net_client iif $nic_proxy prio 101 table 101&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# RT: route to client&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;route add default via $gw_client dev $nic_client table 101&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# conntrack zone split&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# zone 0: default zone, generic host traffic along proxy and Internet&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# zone 1: client &amp;lt;-&amp;gt; proxy traffic&lt;/span&gt;

    &lt;span class=&quot;nv&quot;&gt;iptables_add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PREROUTING&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-t raw -i $nic_client -j CT --zone 1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;iptables_add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PREROUTING&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-t raw -i $nic_proxy -d $net_client -j CT --zone 1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sat, 18 Apr 2020 09:15:00 +0900</pubDate>
        <link>http://cwyang.github.io/2020/04/18/why-iptables-nat-not-working-with-multiple-policy-routing.html</link>
        <guid isPermaLink="true">http://cwyang.github.io/2020/04/18/why-iptables-nat-not-working-with-multiple-policy-routing.html</guid>
        
        <category>blog</category>
        
        <category>policy routing</category>
        
        <category>NAT</category>
        
        <category>iptables</category>
        
        <category>linux</category>
        
        <category>transparenty proxy</category>
        
        <category>perl</category>
        
        
      </item>
    
      <item>
        <title>춘추의 설계자 관중</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“춘추전국 이야기 1: 춘추의 설계자 관중”을 읽고.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;FAANG.&lt;/p&gt;

&lt;p&gt;Facebook, Apple/Amazon, Netflix, Google로 대표되는 현 IT세계의 지배자들이다. 아니 IT로 국한하는 것이 좀 잘못된 것 같다. 현 세계 비즈니스의 빅 플레이어들이다. 4차 산업 혁명의 최 전선에서 달려가고 있으며, 세계 발전을 리드하고, 무수히 많은 가치를 창출하는 플레이어들. 그들과의 경쟁에서는 살아남을 수 없으며, 그들이 취하지 않는 작은 시장, 그리고 그들이 제공하는 플랫폼에서 영유할 수 있는 시장만을 노려야 하는 것이 나머지 기업들의 상황이다. 그러면 그  나머지 기업들은 어떻게 살아남아야 하는가.&lt;/p&gt;

&lt;p&gt;FAANG을 직접적으로 다룬 책들 “플랫폼 제국의 미래”, “구글 스토리”, “비커밍 페이스북”등과 같은 책들이 이야기하는 것은 그들의 “기술개발”, “투자자”, “불굴의 집념”, 그리고 “행운”이라는 요소들이었다. 토끼가 앞서가는데 잠도 안자, 더 좋은 밥을 먹어, 지구력도 더 좋아. 운까지 따라. 거북이는 토끼를 영원히 이길 수 없을까?&lt;/p&gt;

&lt;p&gt;기원전 8세기~기원전2세기에 걸친 중국의 춘추전국시대에서 그 답을 찾고자 한다.
중국 역사상 가장 오랜동안인 800년간 유지되었던 주나라. 주나라도 왕권이 바뀜에 따라 쇠약해지고 그와 함께 나타난 춘추오패(제, 진, 초, 오, 월). 마이크로소프트(주나라)의 쇠약과 함께 나타난 FAANG과 비슷하다. 사티아 나델라가 MS를 다시 추스려 부흥시키기 전까지 MS는 망한다고 여겨지고 있었다. 제왕의 자리를 차지하고 있었던 MS가 말이다. 그와 마찬가지로 지금 보면 영원할 것 같은 FAANG도 언젠가는 쇠약해지고 다른 기업이 그 위치를 차지할 것이다. 춘추오패의 뒤를 이어 전국 칠웅이 나타난 것 처럼. 그리고 그 뒤로 진, 한, 등 계속 역사가 되풀이 되듯.&lt;/p&gt;

&lt;p&gt;춘추오패의 첫번째 패자인 제 환공은 관중을 재상으로 삼아 나라를 강하게 만들어 유명무실해진 동주 왕실을 대신해 회맹을 거행하였다. 제 환공은 자신을 죽이려고 까지 했던 관중을 등용하였고 관중의 개혁을 받아들인 훌륭한 군주이다. 관중은 인치와 법치를 중시하였다. 즉 인재 제일을 표방하였으며, 법을 명확하게 하여 백성들이 나라에는 규칙이 명확히  집행되는 것을 알게 하였다. 백성들이 잘 살아야 왕실이 잘 살 수 있다는 이념하에 생업기반을 잡아주어 경제를 부흥시켰다. 사농공상의 거주지를 분할하여 산업을 특화시키고,  행정과 군사편제를 결합시켜 군사력을 증강시켰으며, 행정조직별로 책임과 권한을 분할하였다. 이렇게 긴 시간을 보내면서 패자로서의 역량이 생긴 것이다.&lt;/p&gt;

&lt;p&gt;노동 생산성 향상을 위하여 제시한 관중의 분업은 서구의 컨베이어 벨트형 분업이 아니고, 하나의 공정을 지배하는 분업이라는 점이 인상깊다. 생산을 편안하고 천직으로 받아들이게 하는 분업이다. 산업사회의 분업과는 다른 것이다. 또한 이들을 모여서 거주하게 하여 상승 효과를 유도한 것에도 감탄하였다. 군사간의 사기와 친밀도를 강병의 요체라고 파악하여 행정과 군사편제를 결합한 것도 좋았다. 즉 같은 부대는 같은 마을에서 친하게 지내온 사람들인 것이다. “연대의식으로 뭉친 군대는 강하다”는 것.&lt;/p&gt;

&lt;p&gt;맡은 바 업무를 편안하고 천직으로 받아들일 수 있는 환경. 오랜 기간 합을 맞춘 사람들이 이루어내는 시너지. 관중의 이야기를 읽으면서 이를 생각해 보았다.&lt;/p&gt;

</description>
        <pubDate>Wed, 12 Jun 2019 14:30:00 +0900</pubDate>
        <link>http://cwyang.github.io/2019/06/12/guan_zhong.html</link>
        <guid isPermaLink="true">http://cwyang.github.io/2019/06/12/guan_zhong.html</guid>
        
        <category>blog</category>
        
        <category>book</category>
        
        <category>history</category>
        
        
      </item>
    
      <item>
        <title>OVS, Docker, CentOS7 환경 만들기</title>
        <description>&lt;h1 id=&quot;vagrant&quot;&gt;Vagrant&lt;/h1&gt;

&lt;p&gt;centos7기반의 ovs와 docker가 머신이 당분간 계속 필요할 것 같아서,  vagrant를 이용하여 VM을  빌드해보기로 하였습니다.
vagrant는 가상 머신 설치를 도와주는 프로그램입니다. vagrant가 없었던 시절에는 VM에 직접 인스톨 한 후 VM 이미지를 복사해 두어 재 사용하는 방법을 사용했었습니다.
vagrant에서는 기본 이미지 (box라고 합니다.)를 제공하면서, 그 위에 설치 프로그램 형상을 사용자가 지정할 수 있도록 합니다. 쓰면 매우 편한겁니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;uname &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
Linux cwyang 4.10.0-42-generic &lt;span class=&quot;c&quot;&gt;#46~16.04.1-Ubuntu SMP Mon Dec 4 15:57:59 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get install virtualbox vagrant&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;ssl-접속환경-확인&quot;&gt;SSL 접속환경 확인&lt;/h1&gt;

&lt;p&gt;다음 ssl domain들이 인증서 피닝을 요구합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;vagrantcloud.com&lt;/li&gt;
  &lt;li&gt;cbs.centos.org&lt;/li&gt;
  &lt;li&gt;yum.dockerproject.org&lt;/li&gt;
  &lt;li&gt;raw.githubusercontent.com&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;회사안에서 SSL 복호화 장비가 있는 경우 회사 인증서를 VM에 신뢰할 수 있는 인증서로 심거나, SSL 복호화 장비에서 위의 사이트들에 대하여 복호화를 바이패스 하도록 설정합니다.&lt;/p&gt;

&lt;h1 id=&quot;설치&quot;&gt;설치&lt;/h1&gt;

&lt;p&gt;github에 설치 스크립트를 작업해 둔 분이 있습니다. (&lt;a href=&quot;https://github.com/joatmon08/vagrantfiles/tree/master/ovs-vagrant&quot;&gt;링크&lt;/a&gt;)그 파일들을 이용해서 설치해 보았습니다. 감사합니다.&lt;/p&gt;

&lt;p&gt;아래 두 파일을 저장한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;vagrant up&lt;/code&gt;  명령어를 실행하면 수 분 안에 centos/7을 다운 받고 dependency package를 설치하고 ovs를 설치하고 docker를 설치해줍니다. 좋은 세상입니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/joatmon08/vagrantfiles/blob/master/ovs-vagrant/Vagrantfile&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Vagrantfile&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/joatmon08/vagrantfiles/blob/master/ovs-vagrant/bootstrap.sh&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bootstrap.sh&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;설치-확인&quot;&gt;설치 확인&lt;/h1&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vagrant ssh
Last login: Fri Oct 12 01:13:18 2018 from 10.0.2.2
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;호스트의 id_rsa.pub를 VM의 &lt;code class=&quot;highlighter-rouge&quot;&gt;.ssh/authorized_keys&lt;/code&gt;에 등록하면 직접 ssh도 가능합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh vagrant@127.0.0.1 &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 2222
Last login: Fri Oct 12 01:22:25 2018 from 10.0.2.2
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;도커와 OvS를 확인합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;systemctl status openvswitch docker
● openvswitch.service - Open vSwitch
   Loaded: loaded &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/usr/lib/systemd/system/openvswitch.service&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; enabled&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; vendor preset: disabled&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   Active: active &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;exited&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; since Fri 2018-10-12 01:05:18 UTC&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 21min ago
 Main PID: 25616 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;exited, &lt;span class=&quot;nv&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0/SUCCESS&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    Tasks: 0
   Memory: 0B
   CGroup: /system.slice/openvswitch.service

● docker.service - Docker Application Container Engine
   Loaded: loaded &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/usr/lib/systemd/system/docker.service&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; enabled&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; vendor preset: disabled&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
   Active: active &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;running&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; since Fri 2018-10-12 01:05:37 UTC&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 21min ago
     Docs: https://docs.docker.com
 Main PID: 25686 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;dockerd&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    Tasks: 16
   Memory: 16.0M
   CGroup: /system.slice/docker.service
           ├─25686 /usr/bin/dockerd
           └─25689 docker-containerd &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; unix:///var/run/docker/libcontainerd/docker-containerd.sock &lt;span class=&quot;nt&quot;&gt;--metrics-interval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0 -...&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;도커 실행을 위해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;docker&lt;/code&gt;그룹에 &lt;code class=&quot;highlighter-rouge&quot;&gt;vagrant&lt;/code&gt; 사용자를 등록합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;usermod &lt;span class=&quot;nt&quot;&gt;-aG&lt;/span&gt; docker vagrant&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;two-containers-w-ovs-bridge&quot;&gt;Two containers w/ OVS bridge&lt;/h1&gt;
&lt;h2 id=&quot;구성&quot;&gt;구성&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;moby1: eth1 192.168.0.1/24
  | &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ovs-br1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
moby2: eth1 192.168.0.2/24&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;ovs-브릿지-생성&quot;&gt;OVS 브릿지 생성&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;root@localhost vagrant]# ovs-vsctl add-br ovs-br1
root@localhost vagrant]# ovs-vsctl show
94185d0-937e-49bf-a0a4-69ca5027718b
   Bridge &lt;span class=&quot;s2&quot;&gt;&quot;ovs-br1&quot;&lt;/span&gt;
       Port &lt;span class=&quot;s2&quot;&gt;&quot;ovs-br1&quot;&lt;/span&gt;
           Interface &lt;span class=&quot;s2&quot;&gt;&quot;ovs-br1&quot;&lt;/span&gt;
               &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: internal
   ovs_version: &lt;span class=&quot;s2&quot;&gt;&quot;2.9.0&quot;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;컨테이너-생성후-ovs-bridge에-연결&quot;&gt;컨테이너 생성후 ovs-bridge에 연결&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-dit&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;moby1 ubuntu
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; moby1 apt-get update
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; moby1 apt-get install iproute2 iputils-ping
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ovs-docker add-port ovs-br1 eth1 moby1 &lt;span class=&quot;nt&quot;&gt;--ipaddress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.0.1/24

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-dit&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;moby2 ubuntu
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; moby2 apt-get update
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; moby2 apt-get install iproute2 iputils-ping
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ovs-docker add-port ovs-br1 eth2 moby1 &lt;span class=&quot;nt&quot;&gt;--ipaddress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.0.2/24

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; moby1 ip address
1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
...
21: eth0@if22: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc noqueue state UP group default
...
23: eth1@if24: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc noqueue state UP group default qlen 1000
    link/ether b2:bf:61:25:7e:f8 brd ff:ff:ff:ff:ff:ff link-netnsid 0
    inet 192.168.0.1/24 scope global eth1
       valid_lft forever preferred_lft forever&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;컨테이너간-연결-확인&quot;&gt;컨테이너간 연결 확인&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ovs-vsctl list-ports ovs-br1
6b9045d2be344_l
90cd4018819e4_l
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;moby1 ping 192.168.0.2 &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; 1
PING 192.168.0.2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;192.168.0.2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 56&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;84&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; bytes of data.
64 bytes from 192.168.0.2: &lt;span class=&quot;nv&quot;&gt;icmp_seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;nv&quot;&gt;ttl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;64 &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.037 ms

&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; 192.168.0.2 ping statistics &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
1 packets transmitted, 1 received, 0% packet loss, &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;0ms
rtt min/avg/max/mdev &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0.037/0.037/0.037/0.000 ms
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;moby2 ping 192.168.0.1 &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; 1
PING 192.168.0.1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;192.168.0.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 56&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;84&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; bytes of data.
64 bytes from 192.168.0.1: &lt;span class=&quot;nv&quot;&gt;icmp_seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;nv&quot;&gt;ttl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;64 &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.037 ms

&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; 192.168.0.1 ping statistics &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
1 packets transmitted, 1 received, 0% packet loss, &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;0ms
rtt min/avg/max/mdev &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0.037/0.037/0.037/0.000 ms&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;v&lt;/p&gt;
&lt;h1 id=&quot;three-containers-w-ovs-bridge&quot;&gt;Three-containers w/ OVS bridge&lt;/h1&gt;
&lt;h2 id=&quot;구성-1&quot;&gt;구성&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;moby1: eth1 192.168.0.1/24
  | &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ovs-br1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
moby2: eth1 - &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;moby2-bridge&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - eth2
  | &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ovs-br2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
moby3: eth1 192.168.0.2/24&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;ovs-브릿지-생성-1&quot;&gt;OVS 브릿지 생성&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ovs-vsctl add-br ovs-br1
vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ovs-vsctl add-br ovs-br2
vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ovs-vsctl show
94185d0-937e-49bf-a0a4-69ca5027718b
   Bridge &lt;span class=&quot;s2&quot;&gt;&quot;ovs-br2&quot;&lt;/span&gt;
       Port &lt;span class=&quot;s2&quot;&gt;&quot;ovs-br2&quot;&lt;/span&gt;
           Interface &lt;span class=&quot;s2&quot;&gt;&quot;ovs-br2&quot;&lt;/span&gt;
               &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: internal
   Bridge &lt;span class=&quot;s2&quot;&gt;&quot;ovs-br1&quot;&lt;/span&gt;
       Port &lt;span class=&quot;s2&quot;&gt;&quot;ovs-br1&quot;&lt;/span&gt;
           Interface &lt;span class=&quot;s2&quot;&gt;&quot;ovs-br1&quot;&lt;/span&gt;
               &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;: internal
   ovs_version: &lt;span class=&quot;s2&quot;&gt;&quot;2.9.0&quot;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;컨테이너-생성후-ovs-bridge에-연결-1&quot;&gt;컨테이너 생성후 ovs-bridge에 연결&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ovs_3hosts]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;run.sh
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ovs-vsctl add-br ovs-br1
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ovs-vsctl add-br ovs-br2
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ovs-vsctl show

docker run &lt;span class=&quot;nt&quot;&gt;-dit&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;moby1 ubuntu
docker &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;moby1 apt-get update
docker &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;moby1 apt-get &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; install iproute2 iputils-ping
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ovs-docker add-port ovs-br1 eth1 moby1 &lt;span class=&quot;nt&quot;&gt;--ipaddress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.0.1/24

docker run &lt;span class=&quot;nt&quot;&gt;-dit&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--privileged&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;moby2 ubuntu
docker &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;moby2 apt-get update
docker &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;moby2 apt-get &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; install iproute2 iputils-ping
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ovs-docker add-port ovs-br1 eth1 moby2
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ovs-docker add-port ovs-br2 eth2 moby2

docker run &lt;span class=&quot;nt&quot;&gt;-dit&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;moby3 ubuntu
docker &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;moby3 apt-get update
docker &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;moby3 apt-get &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; install iproute2 iputils-ping
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ovs-docker add-port ovs-br2 eth1 moby3 &lt;span class=&quot;nt&quot;&gt;--ipaddress&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.0.2/24&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;host-bridge&quot;&gt;host-bridge&lt;/h2&gt;

&lt;p&gt;moby2안에서 bridge를 생성하여야 하는데, 기본적으로 NET-ADMIN capability를 가지고 있지 못하므로 아래와 같이 실패할 수 있습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;root@79c82193d876:/# ip link add name moby2-bridge &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;bridge
RTNETLINK answers: Operation not permitted&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;그래서 위에서 moby2는 &lt;code class=&quot;highlighter-rouge&quot;&gt;--privileged&lt;/code&gt; 옵션을 이용하여 구동하였습니다. 자 브릿지를 만들어 봅시다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ovs_3hosts]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; moby2 ip link add name moby2-bridge &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;bridge
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ovs_3hosts]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; moby2 ip link &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;dev moby2-bridge up
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ovs_3hosts]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; moby2 ip link &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;dev eth1 master moby2-bridge
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ovs_3hosts]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; moby2 ip link &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;dev eth2 master moby2-bridge

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ovs_3hosts]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; moby2 ip link show
1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
2: moby2-bridge: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000
    link/ether 1e:d3:03:6a:8d:53 brd ff:ff:ff:ff:ff:ff
55: eth0@if56: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc noqueue state UP mode DEFAULT group default
    link/ether 02:42:ac:11:00:03 brd ff:ff:ff:ff:ff:ff link-netnsid 0
57: eth1@if58: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc noqueue master moby2-bridge state UP mode DEFAULT group default qlen 1000
    link/ether 1e:d3:03:6a:8d:53 brd ff:ff:ff:ff:ff:ff link-netnsid 0
59: eth2@if60: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc noqueue master moby2-bridge state UP mode DEFAULT group default qlen 1000
    link/ether 7e:a1:31:29:09:fc brd ff:ff:ff:ff:ff:ff link-netnsid 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;컨테이너간-연결-확인-1&quot;&gt;컨테이너간 연결 확인&lt;/h2&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; moby2 apt-get install tcpdump

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ovs_3hosts]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;moby1 ping 192.168.0.2 &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; 1
PING 192.168.0.2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;192.168.0.2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 56&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;84&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; bytes of data.
64 bytes from 192.168.0.2: &lt;span class=&quot;nv&quot;&gt;icmp_seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1 &lt;span class=&quot;nv&quot;&gt;ttl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;64 &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.339 ms

&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; 192.168.0.2 ping statistics &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
1 packets transmitted, 1 received, 0% packet loss, &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;0ms
rtt min/avg/max/mdev &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 0.339/0.339/0.339/0.000 ms
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ovs_3hosts]&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이 때 moby2에서 moby2-bridge에 대고 패킷을 뜨면 위의 연결 확인 패킷을 잡을 수 있습니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;vagrant@localhost ~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; moby2 tcpdump &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; moby2-bridge &lt;span class=&quot;nt&quot;&gt;-A&lt;/span&gt;
tcpdump: verbose output suppressed, use &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; or &lt;span class=&quot;nt&quot;&gt;-vv&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;full protocol decode
listening on moby2-bridge, link-type EN10MB &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ethernet&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, capture size 262144 bytes
05:24:36.195869 IP 192.168.0.1 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; 192.168.0.2: ICMP &lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;request, id 344, seq 1, length 64
E..T..@.@..............L.X...0.[....G....................... &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$%&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;amp;'()*+,-./01234567
05:24:36.195971 IP 192.168.0.2 &amp;gt; 192.168.0.1: ICMP echo reply, id 344, seq 1, length 64
E..T....@.x...........!L.X...0.[....G....................... !&quot;&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#$%&amp;amp;'()*+,-./01234567&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Fri, 12 Oct 2018 14:38:00 +0900</pubDate>
        <link>http://cwyang.github.io/2018/10/12/ovs-docker-centos7-environment.html</link>
        <guid isPermaLink="true">http://cwyang.github.io/2018/10/12/ovs-docker-centos7-environment.html</guid>
        
        <category>blog</category>
        
        <category>ovs</category>
        
        <category>docker</category>
        
        <category>centos</category>
        
        <category>vagrant</category>
        
        
      </item>
    
  </channel>
</rss>
